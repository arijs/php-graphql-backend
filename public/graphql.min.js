var GraphQL=function(e){"use strict";function t(e){return"object"==typeof e&&null!==e}function n(e,t){const n=/\r\n|[\n\r]/g;let i,r=1,s=t+1;for(;(i=n.exec(e.body))&&i.index<t;)r+=1,s=t+1-(i.index+i[0].length);return{line:r,column:s}}function i(e){return r(e.source,n(e.source,e.start))}function r(e,t){const n=e.locationOffset.column-1,i="".padStart(n)+e.body,r=t.line-1,o=e.locationOffset.line-1,a=t.line+o,c=1===t.line?n:0,l=t.column+c,u=`${e.name}:${a}:${l}\n`,p=i.split(/\r\n|[\n\r]/g),d=p[r];if(d.length>120){const e=Math.floor(l/80),t=l%80,n=[];for(let e=0;e<d.length;e+=80)n.push(d.slice(e,e+80));return u+s([[`${a} |`,n[0]],...n.slice(1,e+1).map((e=>["|",e])),["|","^".padStart(t)],["|",n[e+1]]])}return u+s([[a-1+" |",p[r-1]],[`${a} |`,d],["|","^".padStart(l)],[`${a+1} |`,p[r+1]]])}function s(e){const t=e.filter((([e,t])=>void 0!==t)),n=Math.max(...t.map((([e])=>e.length)));return t.map((([e,t])=>e.padStart(n)+(t?" "+t:""))).join("\n")}Object.freeze({major:15,minor:4,patch:0,preReleaseTag:null});class o extends Error{constructor(e,i,r,s,a,c,l){var u,p,d,f;super(e);const h=Array.isArray(i)?0!==i.length?i:void 0:i?[i]:void 0;let E=r;var m;!E&&h&&(E=null===(m=h[0].loc)||void 0===m?void 0:m.source);let T,y=s;if(!y&&h){y=[];for(const e of h)e.loc&&y.push(e.loc.start)}if(y&&0===y.length&&(y=void 0),s&&r)T=s.map((e=>n(r,e)));else if(h){T=[];for(const e of h)e.loc&&T.push(n(e.loc.source,e.loc.start))}let N=l;if(null==N&&null!=c){const e=c.extensions;t(e)&&(N=e)}Object.defineProperties(this,{name:{value:"GraphQLError"},message:{value:e,enumerable:!0,writable:!0},locations:{value:null!==(u=T)&&void 0!==u?u:void 0,enumerable:null!=T},path:{value:null!=a?a:void 0,enumerable:null!=a},nodes:{value:null!=h?h:void 0},source:{value:null!==(p=E)&&void 0!==p?p:void 0},positions:{value:null!==(d=y)&&void 0!==d?d:void 0},originalError:{value:c},extensions:{value:null!==(f=N)&&void 0!==f?f:void 0,enumerable:null!=N}}),null!=c&&c.stack?Object.defineProperty(this,"stack",{value:c.stack,writable:!0,configurable:!0}):Error.captureStackTrace?Error.captureStackTrace(this,o):Object.defineProperty(this,"stack",{value:Error().stack,writable:!0,configurable:!0})}toString(){return function(e){let t=e.message;if(e.nodes)for(const n of e.nodes)n.loc&&(t+="\n\n"+i(n.loc));else if(e.source&&e.locations)for(const n of e.locations)t+="\n\n"+r(e.source,n);return t}(this)}get[Symbol.toStringTag](){return"Object"}}function a(e,t,n){return new o(`Syntax Error: ${n}`,void 0,e,[t])}const c=Object.freeze({NAME:"Name",DOCUMENT:"Document",OPERATION_DEFINITION:"OperationDefinition",VARIABLE_DEFINITION:"VariableDefinition",SELECTION_SET:"SelectionSet",FIELD:"Field",ARGUMENT:"Argument",FRAGMENT_SPREAD:"FragmentSpread",INLINE_FRAGMENT:"InlineFragment",FRAGMENT_DEFINITION:"FragmentDefinition",VARIABLE:"Variable",INT:"IntValue",FLOAT:"FloatValue",STRING:"StringValue",BOOLEAN:"BooleanValue",NULL:"NullValue",ENUM:"EnumValue",LIST:"ListValue",OBJECT:"ObjectValue",OBJECT_FIELD:"ObjectField",DIRECTIVE:"Directive",NAMED_TYPE:"NamedType",LIST_TYPE:"ListType",NON_NULL_TYPE:"NonNullType",SCHEMA_DEFINITION:"SchemaDefinition",OPERATION_TYPE_DEFINITION:"OperationTypeDefinition",SCALAR_TYPE_DEFINITION:"ScalarTypeDefinition",OBJECT_TYPE_DEFINITION:"ObjectTypeDefinition",FIELD_DEFINITION:"FieldDefinition",INPUT_VALUE_DEFINITION:"InputValueDefinition",INTERFACE_TYPE_DEFINITION:"InterfaceTypeDefinition",UNION_TYPE_DEFINITION:"UnionTypeDefinition",ENUM_TYPE_DEFINITION:"EnumTypeDefinition",ENUM_VALUE_DEFINITION:"EnumValueDefinition",INPUT_OBJECT_TYPE_DEFINITION:"InputObjectTypeDefinition",DIRECTIVE_DEFINITION:"DirectiveDefinition",SCHEMA_EXTENSION:"SchemaExtension",SCALAR_TYPE_EXTENSION:"ScalarTypeExtension",OBJECT_TYPE_EXTENSION:"ObjectTypeExtension",INTERFACE_TYPE_EXTENSION:"InterfaceTypeExtension",UNION_TYPE_EXTENSION:"UnionTypeExtension",ENUM_TYPE_EXTENSION:"EnumTypeExtension",INPUT_OBJECT_TYPE_EXTENSION:"InputObjectTypeExtension"});class l{constructor(e,t,n){this.start=e.start,this.end=t.end,this.startToken=e,this.endToken=t,this.source=n}toJSON(){return{start:this.start,end:this.end}}}class u{constructor(e,t,n,i,r,s,o){this.kind=e,this.start=t,this.end=n,this.line=i,this.column=r,this.value=o,this.prev=s,this.next=null}toJSON(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}}}function p(e){return null!=e&&"string"==typeof e.kind}const d=Object.freeze({SOF:"<SOF>",EOF:"<EOF>",BANG:"!",DOLLAR:"$",AMP:"&",PAREN_L:"(",PAREN_R:")",SPREAD:"...",COLON:":",EQUALS:"=",AT:"@",BRACKET_L:"[",BRACKET_R:"]",BRACE_L:"{",PIPE:"|",BRACE_R:"}",NAME:"Name",INT:"Int",FLOAT:"Float",STRING:"String",BLOCK_STRING:"BlockString",COMMENT:"Comment"});function f(e){return h(e,[])}function h(e,t){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return function(e,t){if(null===e)return"null";if(t.includes(e))return"[Circular]";const n=[...t,e];if("function"==typeof e.toJSON){const t=e.toJSON();if(t!==e)return"string"==typeof t?t:h(t,n)}else if(Array.isArray(e))return function(e,t){if(0===e.length)return"[]";if(t.length>2)return"[Array]";const n=Math.min(10,e.length),i=e.length-n,r=[];for(let i=0;i<n;++i)r.push(h(e[i],t));1===i?r.push("... 1 more item"):i>1&&r.push(`... ${i} more items`);return"["+r.join(", ")+"]"}(e,n);return function(e,t){const n=Object.entries(e);if(0===n.length)return"{}";if(t.length>2)return"["+function(e){const t=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if("Object"===t&&"function"==typeof e.constructor){const t=e.constructor.name;if("string"==typeof t&&""!==t)return t}return t}(e)+"]";return"{ "+n.map((([e,n])=>e+": "+h(n,t))).join(", ")+" }"}(e,n)}(e,t);default:return String(e)}}function E(e,t){if(!Boolean(e))throw new Error(t)}const m=function(e,t){if(e instanceof t)return!0;if(e){const n=e.constructor,i=t.name;if(i&&n&&n.name===i)throw new Error(`Cannot use ${i} "${e}" from another module or realm.\n\nEnsure that there is only one instance of "graphql" in the node_modules\ndirectory. If different versions of "graphql" are the dependencies of other\nrelied on modules, use "resolutions" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate "graphql" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`)}return!1};class T{constructor(e,t="GraphQL request",n={line:1,column:1}){"string"==typeof e||E(!1,`Body must be a string. Received: ${f(e)}.`),this.body=e,this.name=t,this.locationOffset=n,this.locationOffset.line>0||E(!1,"line in locationOffset is 1-indexed and must be positive."),this.locationOffset.column>0||E(!1,"column in locationOffset is 1-indexed and must be positive.")}get[Symbol.toStringTag](){return"Source"}}const y=Object.freeze({QUERY:"QUERY",MUTATION:"MUTATION",SUBSCRIPTION:"SUBSCRIPTION",FIELD:"FIELD",FRAGMENT_DEFINITION:"FRAGMENT_DEFINITION",FRAGMENT_SPREAD:"FRAGMENT_SPREAD",INLINE_FRAGMENT:"INLINE_FRAGMENT",VARIABLE_DEFINITION:"VARIABLE_DEFINITION",SCHEMA:"SCHEMA",SCALAR:"SCALAR",OBJECT:"OBJECT",FIELD_DEFINITION:"FIELD_DEFINITION",ARGUMENT_DEFINITION:"ARGUMENT_DEFINITION",INTERFACE:"INTERFACE",UNION:"UNION",ENUM:"ENUM",ENUM_VALUE:"ENUM_VALUE",INPUT_OBJECT:"INPUT_OBJECT",INPUT_FIELD_DEFINITION:"INPUT_FIELD_DEFINITION"});function N(e){const t=e.split(/\r\n|[\n\r]/g),n=function(e){var t;let n=!0,i=!0,r=0,s=null;for(let t=0;t<e.length;++t)switch(e.charCodeAt(t)){case 13:10===e.charCodeAt(t+1)&&++t;case 10:n=!1,i=!0,r=0;break;case 9:case 32:++r;break;default:i&&!n&&(null===s||r<s)&&(s=r),i=!1}return null!==(t=s)&&void 0!==t?t:0}(e);if(0!==n)for(let e=1;e<t.length;e++)t[e]=t[e].slice(n);let i=0;for(;i<t.length&&v(t[i]);)++i;let r=t.length;for(;r>i&&v(t[r-1]);)--r;return t.slice(i,r).join("\n")}function v(e){for(let t=0;t<e.length;++t)if(" "!==e[t]&&"\t"!==e[t])return!1;return!0}class I{constructor(e){const t=new u(d.SOF,0,0,0,0,null);this.source=e,this.lastToken=t,this.token=t,this.line=1,this.lineStart=0}advance(){this.lastToken=this.token;return this.token=this.lookahead()}lookahead(){let e=this.token;if(e.kind!==d.EOF)do{var t;e=null!==(t=e.next)&&void 0!==t?t:e.next=O(this,e)}while(e.kind===d.COMMENT);return e}}function _(e){return isNaN(e)?d.EOF:e<127?JSON.stringify(String.fromCharCode(e)):`"\\u${("00"+e.toString(16).toUpperCase()).slice(-4)}"`}function O(e,t){const n=e.source,i=n.body,r=i.length;let s=t.end;for(;s<r;){const r=i.charCodeAt(s),o=e.line,c=1+s-e.lineStart;switch(r){case 65279:case 9:case 32:case 44:++s;continue;case 10:++s,++e.line,e.lineStart=s;continue;case 13:10===i.charCodeAt(s+1)?s+=2:++s,++e.line,e.lineStart=s;continue;case 33:return new u(d.BANG,s,s+1,o,c,t);case 35:return D(n,s,o,c,t);case 36:return new u(d.DOLLAR,s,s+1,o,c,t);case 38:return new u(d.AMP,s,s+1,o,c,t);case 40:return new u(d.PAREN_L,s,s+1,o,c,t);case 41:return new u(d.PAREN_R,s,s+1,o,c,t);case 46:if(46===i.charCodeAt(s+1)&&46===i.charCodeAt(s+2))return new u(d.SPREAD,s,s+3,o,c,t);break;case 58:return new u(d.COLON,s,s+1,o,c,t);case 61:return new u(d.EQUALS,s,s+1,o,c,t);case 64:return new u(d.AT,s,s+1,o,c,t);case 91:return new u(d.BRACKET_L,s,s+1,o,c,t);case 93:return new u(d.BRACKET_R,s,s+1,o,c,t);case 123:return new u(d.BRACE_L,s,s+1,o,c,t);case 124:return new u(d.PIPE,s,s+1,o,c,t);case 125:return new u(d.BRACE_R,s,s+1,o,c,t);case 34:return 34===i.charCodeAt(s+1)&&34===i.charCodeAt(s+2)?w(n,s,o,c,t,e):S(n,s,o,c,t);case 45:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return b(n,s,r,o,c,t);case 65:case 66:case 67:case 68:case 69:case 70:case 71:case 72:case 73:case 74:case 75:case 76:case 77:case 78:case 79:case 80:case 81:case 82:case 83:case 84:case 85:case 86:case 87:case 88:case 89:case 90:case 95:case 97:case 98:case 99:case 100:case 101:case 102:case 103:case 104:case 105:case 106:case 107:case 108:case 109:case 110:case 111:case 112:case 113:case 114:case 115:case 116:case 117:case 118:case 119:case 120:case 121:case 122:return L(n,s,o,c,t)}throw a(n,s,g(r))}const o=e.line,c=1+s-e.lineStart;return new u(d.EOF,r,r,o,c,t)}function g(e){return e<32&&9!==e&&10!==e&&13!==e?`Cannot contain the invalid character ${_(e)}.`:39===e?"Unexpected single quote character ('), did you mean to use a double quote (\")?":`Cannot parse the unexpected character ${_(e)}.`}function D(e,t,n,i,r){const s=e.body;let o,a=t;do{o=s.charCodeAt(++a)}while(!isNaN(o)&&(o>31||9===o));return new u(d.COMMENT,t,a,n,i,r,s.slice(t+1,a))}function b(e,t,n,i,r,s){const o=e.body;let c=n,l=t,p=!1;if(45===c&&(c=o.charCodeAt(++l)),48===c){if(c=o.charCodeAt(++l),c>=48&&c<=57)throw a(e,l,`Invalid number, unexpected digit after 0: ${_(c)}.`)}else l=A(e,l,c),c=o.charCodeAt(l);if(46===c&&(p=!0,c=o.charCodeAt(++l),l=A(e,l,c),c=o.charCodeAt(l)),69!==c&&101!==c||(p=!0,c=o.charCodeAt(++l),43!==c&&45!==c||(c=o.charCodeAt(++l)),l=A(e,l,c),c=o.charCodeAt(l)),46===c||function(e){return 95===e||e>=65&&e<=90||e>=97&&e<=122}(c))throw a(e,l,`Invalid number, expected digit but got: ${_(c)}.`);return new u(p?d.FLOAT:d.INT,t,l,i,r,s,o.slice(t,l))}function A(e,t,n){const i=e.body;let r=t,s=n;if(s>=48&&s<=57){do{s=i.charCodeAt(++r)}while(s>=48&&s<=57);return r}throw a(e,r,`Invalid number, expected digit but got: ${_(s)}.`)}function S(e,t,n,i,r){const s=e.body;let o=t+1,c=o,l=0,p="";for(;o<s.length&&!isNaN(l=s.charCodeAt(o))&&10!==l&&13!==l;){if(34===l)return p+=s.slice(c,o),new u(d.STRING,t,o+1,n,i,r,p);if(l<32&&9!==l)throw a(e,o,`Invalid character within String: ${_(l)}.`);if(++o,92===l){switch(p+=s.slice(c,o-1),l=s.charCodeAt(o),l){case 34:p+='"';break;case 47:p+="/";break;case 92:p+="\\";break;case 98:p+="\b";break;case 102:p+="\f";break;case 110:p+="\n";break;case 114:p+="\r";break;case 116:p+="\t";break;case 117:{const t=(f=s.charCodeAt(o+1),h=s.charCodeAt(o+2),E=s.charCodeAt(o+3),m=s.charCodeAt(o+4),R(f)<<12|R(h)<<8|R(E)<<4|R(m));if(t<0){throw a(e,o,`Invalid character escape sequence: \\u${s.slice(o+1,o+5)}.`)}p+=String.fromCharCode(t),o+=4;break}default:throw a(e,o,`Invalid character escape sequence: \\${String.fromCharCode(l)}.`)}++o,c=o}}var f,h,E,m;throw a(e,o,"Unterminated string.")}function w(e,t,n,i,r,s){const o=e.body;let c=t+3,l=c,p=0,f="";for(;c<o.length&&!isNaN(p=o.charCodeAt(c));){if(34===p&&34===o.charCodeAt(c+1)&&34===o.charCodeAt(c+2))return f+=o.slice(l,c),new u(d.BLOCK_STRING,t,c+3,n,i,r,N(f));if(p<32&&9!==p&&10!==p&&13!==p)throw a(e,c,`Invalid character within String: ${_(p)}.`);10===p?(++c,++s.line,s.lineStart=c):13===p?(10===o.charCodeAt(c+1)?c+=2:++c,++s.line,s.lineStart=c):92===p&&34===o.charCodeAt(c+1)&&34===o.charCodeAt(c+2)&&34===o.charCodeAt(c+3)?(f+=o.slice(l,c)+'"""',c+=4,l=c):++c}throw a(e,c,"Unterminated string.")}function R(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:-1}function L(e,t,n,i,r){const s=e.body,o=s.length;let a=t+1,c=0;for(;a!==o&&!isNaN(c=s.charCodeAt(a))&&(95===c||c>=48&&c<=57||c>=65&&c<=90||c>=97&&c<=122);)++a;return new u(d.NAME,t,a,n,i,r,s.slice(t,a))}class x{constructor(e,t){const n=function(e){return m(e,T)}(e)?e:new T(e);this._lexer=new I(n),this._options=t}parseName(){const e=this.expectToken(d.NAME);return{kind:c.NAME,value:e.value,loc:this.loc(e)}}parseDocument(){const e=this._lexer.token;return{kind:c.DOCUMENT,definitions:this.many(d.SOF,this.parseDefinition,d.EOF),loc:this.loc(e)}}parseDefinition(){if(this.peek(d.NAME))switch(this._lexer.token.value){case"query":case"mutation":case"subscription":return this.parseOperationDefinition();case"fragment":return this.parseFragmentDefinition();case"schema":case"scalar":case"type":case"interface":case"union":case"enum":case"input":case"directive":return this.parseTypeSystemDefinition();case"extend":return this.parseTypeSystemExtension()}else{if(this.peek(d.BRACE_L))return this.parseOperationDefinition();if(this.peekDescription())return this.parseTypeSystemDefinition()}throw this.unexpected()}parseOperationDefinition(){const e=this._lexer.token;if(this.peek(d.BRACE_L))return{kind:c.OPERATION_DEFINITION,operation:"query",name:void 0,variableDefinitions:[],directives:[],selectionSet:this.parseSelectionSet(),loc:this.loc(e)};const t=this.parseOperationType();let n;return this.peek(d.NAME)&&(n=this.parseName()),{kind:c.OPERATION_DEFINITION,operation:t,name:n,variableDefinitions:this.parseVariableDefinitions(),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(e)}}parseOperationType(){const e=this.expectToken(d.NAME);switch(e.value){case"query":return"query";case"mutation":return"mutation";case"subscription":return"subscription"}throw this.unexpected(e)}parseVariableDefinitions(){return this.optionalMany(d.PAREN_L,this.parseVariableDefinition,d.PAREN_R)}parseVariableDefinition(){const e=this._lexer.token;return{kind:c.VARIABLE_DEFINITION,variable:this.parseVariable(),type:(this.expectToken(d.COLON),this.parseTypeReference()),defaultValue:this.expectOptionalToken(d.EQUALS)?this.parseValueLiteral(!0):void 0,directives:this.parseDirectives(!0),loc:this.loc(e)}}parseVariable(){const e=this._lexer.token;return this.expectToken(d.DOLLAR),{kind:c.VARIABLE,name:this.parseName(),loc:this.loc(e)}}parseSelectionSet(){const e=this._lexer.token;return{kind:c.SELECTION_SET,selections:this.many(d.BRACE_L,this.parseSelection,d.BRACE_R),loc:this.loc(e)}}parseSelection(){return this.peek(d.SPREAD)?this.parseFragment():this.parseField()}parseField(){const e=this._lexer.token,t=this.parseName();let n,i;return this.expectOptionalToken(d.COLON)?(n=t,i=this.parseName()):i=t,{kind:c.FIELD,alias:n,name:i,arguments:this.parseArguments(!1),directives:this.parseDirectives(!1),selectionSet:this.peek(d.BRACE_L)?this.parseSelectionSet():void 0,loc:this.loc(e)}}parseArguments(e){const t=e?this.parseConstArgument:this.parseArgument;return this.optionalMany(d.PAREN_L,t,d.PAREN_R)}parseArgument(){const e=this._lexer.token,t=this.parseName();return this.expectToken(d.COLON),{kind:c.ARGUMENT,name:t,value:this.parseValueLiteral(!1),loc:this.loc(e)}}parseConstArgument(){const e=this._lexer.token;return{kind:c.ARGUMENT,name:this.parseName(),value:(this.expectToken(d.COLON),this.parseValueLiteral(!0)),loc:this.loc(e)}}parseFragment(){const e=this._lexer.token;this.expectToken(d.SPREAD);const t=this.expectOptionalKeyword("on");return!t&&this.peek(d.NAME)?{kind:c.FRAGMENT_SPREAD,name:this.parseFragmentName(),directives:this.parseDirectives(!1),loc:this.loc(e)}:{kind:c.INLINE_FRAGMENT,typeCondition:t?this.parseNamedType():void 0,directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(e)}}parseFragmentDefinition(){var e;const t=this._lexer.token;return this.expectKeyword("fragment"),!0===(null===(e=this._options)||void 0===e?void 0:e.allowLegacyFragmentVariables)?{kind:c.FRAGMENT_DEFINITION,name:this.parseFragmentName(),variableDefinitions:this.parseVariableDefinitions(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(t)}:{kind:c.FRAGMENT_DEFINITION,name:this.parseFragmentName(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet(),loc:this.loc(t)}}parseFragmentName(){if("on"===this._lexer.token.value)throw this.unexpected();return this.parseName()}parseValueLiteral(e){const t=this._lexer.token;switch(t.kind){case d.BRACKET_L:return this.parseList(e);case d.BRACE_L:return this.parseObject(e);case d.INT:return this._lexer.advance(),{kind:c.INT,value:t.value,loc:this.loc(t)};case d.FLOAT:return this._lexer.advance(),{kind:c.FLOAT,value:t.value,loc:this.loc(t)};case d.STRING:case d.BLOCK_STRING:return this.parseStringLiteral();case d.NAME:switch(this._lexer.advance(),t.value){case"true":return{kind:c.BOOLEAN,value:!0,loc:this.loc(t)};case"false":return{kind:c.BOOLEAN,value:!1,loc:this.loc(t)};case"null":return{kind:c.NULL,loc:this.loc(t)};default:return{kind:c.ENUM,value:t.value,loc:this.loc(t)}}case d.DOLLAR:if(!e)return this.parseVariable()}throw this.unexpected()}parseStringLiteral(){const e=this._lexer.token;return this._lexer.advance(),{kind:c.STRING,value:e.value,block:e.kind===d.BLOCK_STRING,loc:this.loc(e)}}parseList(e){const t=this._lexer.token;return{kind:c.LIST,values:this.any(d.BRACKET_L,(()=>this.parseValueLiteral(e)),d.BRACKET_R),loc:this.loc(t)}}parseObject(e){const t=this._lexer.token;return{kind:c.OBJECT,fields:this.any(d.BRACE_L,(()=>this.parseObjectField(e)),d.BRACE_R),loc:this.loc(t)}}parseObjectField(e){const t=this._lexer.token,n=this.parseName();return this.expectToken(d.COLON),{kind:c.OBJECT_FIELD,name:n,value:this.parseValueLiteral(e),loc:this.loc(t)}}parseDirectives(e){const t=[];for(;this.peek(d.AT);)t.push(this.parseDirective(e));return t}parseDirective(e){const t=this._lexer.token;return this.expectToken(d.AT),{kind:c.DIRECTIVE,name:this.parseName(),arguments:this.parseArguments(e),loc:this.loc(t)}}parseTypeReference(){const e=this._lexer.token;let t;if(this.expectOptionalToken(d.BRACKET_L)){const n=this.parseTypeReference();this.expectToken(d.BRACKET_R),t={kind:c.LIST_TYPE,type:n,loc:this.loc(e)}}else t=this.parseNamedType();return this.expectOptionalToken(d.BANG)?{kind:c.NON_NULL_TYPE,type:t,loc:this.loc(e)}:t}parseNamedType(){const e=this._lexer.token;return{kind:c.NAMED_TYPE,name:this.parseName(),loc:this.loc(e)}}parseTypeSystemDefinition(){const e=this.peekDescription()?this._lexer.lookahead():this._lexer.token;if(e.kind===d.NAME)switch(e.value){case"schema":return this.parseSchemaDefinition();case"scalar":return this.parseScalarTypeDefinition();case"type":return this.parseObjectTypeDefinition();case"interface":return this.parseInterfaceTypeDefinition();case"union":return this.parseUnionTypeDefinition();case"enum":return this.parseEnumTypeDefinition();case"input":return this.parseInputObjectTypeDefinition();case"directive":return this.parseDirectiveDefinition()}throw this.unexpected(e)}peekDescription(){return this.peek(d.STRING)||this.peek(d.BLOCK_STRING)}parseDescription(){if(this.peekDescription())return this.parseStringLiteral()}parseSchemaDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("schema");const n=this.parseDirectives(!0),i=this.many(d.BRACE_L,this.parseOperationTypeDefinition,d.BRACE_R);return{kind:c.SCHEMA_DEFINITION,description:t,directives:n,operationTypes:i,loc:this.loc(e)}}parseOperationTypeDefinition(){const e=this._lexer.token,t=this.parseOperationType();this.expectToken(d.COLON);const n=this.parseNamedType();return{kind:c.OPERATION_TYPE_DEFINITION,operation:t,type:n,loc:this.loc(e)}}parseScalarTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("scalar");const n=this.parseName(),i=this.parseDirectives(!0);return{kind:c.SCALAR_TYPE_DEFINITION,description:t,name:n,directives:i,loc:this.loc(e)}}parseObjectTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("type");const n=this.parseName(),i=this.parseImplementsInterfaces(),r=this.parseDirectives(!0),s=this.parseFieldsDefinition();return{kind:c.OBJECT_TYPE_DEFINITION,description:t,name:n,interfaces:i,directives:r,fields:s,loc:this.loc(e)}}parseImplementsInterfaces(){return this.expectOptionalKeyword("implements")?this.delimitedMany(d.AMP,this.parseNamedType):[]}parseFieldsDefinition(){return this.optionalMany(d.BRACE_L,this.parseFieldDefinition,d.BRACE_R)}parseFieldDefinition(){const e=this._lexer.token,t=this.parseDescription(),n=this.parseName(),i=this.parseArgumentDefs();this.expectToken(d.COLON);const r=this.parseTypeReference(),s=this.parseDirectives(!0);return{kind:c.FIELD_DEFINITION,description:t,name:n,arguments:i,type:r,directives:s,loc:this.loc(e)}}parseArgumentDefs(){return this.optionalMany(d.PAREN_L,this.parseInputValueDef,d.PAREN_R)}parseInputValueDef(){const e=this._lexer.token,t=this.parseDescription(),n=this.parseName();this.expectToken(d.COLON);const i=this.parseTypeReference();let r;this.expectOptionalToken(d.EQUALS)&&(r=this.parseValueLiteral(!0));const s=this.parseDirectives(!0);return{kind:c.INPUT_VALUE_DEFINITION,description:t,name:n,type:i,defaultValue:r,directives:s,loc:this.loc(e)}}parseInterfaceTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("interface");const n=this.parseName(),i=this.parseImplementsInterfaces(),r=this.parseDirectives(!0),s=this.parseFieldsDefinition();return{kind:c.INTERFACE_TYPE_DEFINITION,description:t,name:n,interfaces:i,directives:r,fields:s,loc:this.loc(e)}}parseUnionTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("union");const n=this.parseName(),i=this.parseDirectives(!0),r=this.parseUnionMemberTypes();return{kind:c.UNION_TYPE_DEFINITION,description:t,name:n,directives:i,types:r,loc:this.loc(e)}}parseUnionMemberTypes(){return this.expectOptionalToken(d.EQUALS)?this.delimitedMany(d.PIPE,this.parseNamedType):[]}parseEnumTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("enum");const n=this.parseName(),i=this.parseDirectives(!0),r=this.parseEnumValuesDefinition();return{kind:c.ENUM_TYPE_DEFINITION,description:t,name:n,directives:i,values:r,loc:this.loc(e)}}parseEnumValuesDefinition(){return this.optionalMany(d.BRACE_L,this.parseEnumValueDefinition,d.BRACE_R)}parseEnumValueDefinition(){const e=this._lexer.token,t=this.parseDescription(),n=this.parseName(),i=this.parseDirectives(!0);return{kind:c.ENUM_VALUE_DEFINITION,description:t,name:n,directives:i,loc:this.loc(e)}}parseInputObjectTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("input");const n=this.parseName(),i=this.parseDirectives(!0),r=this.parseInputFieldsDefinition();return{kind:c.INPUT_OBJECT_TYPE_DEFINITION,description:t,name:n,directives:i,fields:r,loc:this.loc(e)}}parseInputFieldsDefinition(){return this.optionalMany(d.BRACE_L,this.parseInputValueDef,d.BRACE_R)}parseTypeSystemExtension(){const e=this._lexer.lookahead();if(e.kind===d.NAME)switch(e.value){case"schema":return this.parseSchemaExtension();case"scalar":return this.parseScalarTypeExtension();case"type":return this.parseObjectTypeExtension();case"interface":return this.parseInterfaceTypeExtension();case"union":return this.parseUnionTypeExtension();case"enum":return this.parseEnumTypeExtension();case"input":return this.parseInputObjectTypeExtension()}throw this.unexpected(e)}parseSchemaExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("schema");const t=this.parseDirectives(!0),n=this.optionalMany(d.BRACE_L,this.parseOperationTypeDefinition,d.BRACE_R);if(0===t.length&&0===n.length)throw this.unexpected();return{kind:c.SCHEMA_EXTENSION,directives:t,operationTypes:n,loc:this.loc(e)}}parseScalarTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("scalar");const t=this.parseName(),n=this.parseDirectives(!0);if(0===n.length)throw this.unexpected();return{kind:c.SCALAR_TYPE_EXTENSION,name:t,directives:n,loc:this.loc(e)}}parseObjectTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("type");const t=this.parseName(),n=this.parseImplementsInterfaces(),i=this.parseDirectives(!0),r=this.parseFieldsDefinition();if(0===n.length&&0===i.length&&0===r.length)throw this.unexpected();return{kind:c.OBJECT_TYPE_EXTENSION,name:t,interfaces:n,directives:i,fields:r,loc:this.loc(e)}}parseInterfaceTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("interface");const t=this.parseName(),n=this.parseImplementsInterfaces(),i=this.parseDirectives(!0),r=this.parseFieldsDefinition();if(0===n.length&&0===i.length&&0===r.length)throw this.unexpected();return{kind:c.INTERFACE_TYPE_EXTENSION,name:t,interfaces:n,directives:i,fields:r,loc:this.loc(e)}}parseUnionTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("union");const t=this.parseName(),n=this.parseDirectives(!0),i=this.parseUnionMemberTypes();if(0===n.length&&0===i.length)throw this.unexpected();return{kind:c.UNION_TYPE_EXTENSION,name:t,directives:n,types:i,loc:this.loc(e)}}parseEnumTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("enum");const t=this.parseName(),n=this.parseDirectives(!0),i=this.parseEnumValuesDefinition();if(0===n.length&&0===i.length)throw this.unexpected();return{kind:c.ENUM_TYPE_EXTENSION,name:t,directives:n,values:i,loc:this.loc(e)}}parseInputObjectTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("input");const t=this.parseName(),n=this.parseDirectives(!0),i=this.parseInputFieldsDefinition();if(0===n.length&&0===i.length)throw this.unexpected();return{kind:c.INPUT_OBJECT_TYPE_EXTENSION,name:t,directives:n,fields:i,loc:this.loc(e)}}parseDirectiveDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("directive"),this.expectToken(d.AT);const n=this.parseName(),i=this.parseArgumentDefs(),r=this.expectOptionalKeyword("repeatable");this.expectKeyword("on");const s=this.parseDirectiveLocations();return{kind:c.DIRECTIVE_DEFINITION,description:t,name:n,arguments:i,repeatable:r,locations:s,loc:this.loc(e)}}parseDirectiveLocations(){return this.delimitedMany(d.PIPE,this.parseDirectiveLocation)}parseDirectiveLocation(){const e=this._lexer.token,t=this.parseName();if(void 0!==y[t.value])return t;throw this.unexpected(e)}loc(e){var t;if(!0!==(null===(t=this._options)||void 0===t?void 0:t.noLocation))return new l(e,this._lexer.lastToken,this._lexer.source)}peek(e){return this._lexer.token.kind===e}expectToken(e){const t=this._lexer.token;if(t.kind===e)return this._lexer.advance(),t;throw a(this._lexer.source,t.start,`Expected ${k(e)}, found ${F(t)}.`)}expectOptionalToken(e){const t=this._lexer.token;if(t.kind===e)return this._lexer.advance(),t}expectKeyword(e){const t=this._lexer.token;if(t.kind!==d.NAME||t.value!==e)throw a(this._lexer.source,t.start,`Expected "${e}", found ${F(t)}.`);this._lexer.advance()}expectOptionalKeyword(e){const t=this._lexer.token;return t.kind===d.NAME&&t.value===e&&(this._lexer.advance(),!0)}unexpected(e){const t=null!=e?e:this._lexer.token;return a(this._lexer.source,t.start,`Unexpected ${F(t)}.`)}any(e,t,n){this.expectToken(e);const i=[];for(;!this.expectOptionalToken(n);)i.push(t.call(this));return i}optionalMany(e,t,n){if(this.expectOptionalToken(e)){const e=[];do{e.push(t.call(this))}while(!this.expectOptionalToken(n));return e}return[]}many(e,t,n){this.expectToken(e);const i=[];do{i.push(t.call(this))}while(!this.expectOptionalToken(n));return i}delimitedMany(e,t){this.expectOptionalToken(e);const n=[];do{n.push(t.call(this))}while(this.expectOptionalToken(e));return n}}function F(e){const t=e.value;return k(e.kind)+(null!=t?` "${t}"`:"")}function k(e){return function(e){return e===d.BANG||e===d.DOLLAR||e===d.AMP||e===d.PAREN_L||e===d.PAREN_R||e===d.SPREAD||e===d.COLON||e===d.EQUALS||e===d.AT||e===d.BRACKET_L||e===d.BRACKET_R||e===d.BRACE_L||e===d.PIPE||e===d.BRACE_R}(e)?`"${e}"`:e}const C={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},U=Object.freeze({});function V(e,t,n){const i=e[t];if(i){if(!n&&"function"==typeof i)return i;const e=n?i.leave:i.enter;if("function"==typeof e)return e}else{const t=n?e.leave:e.enter;if(t)return t}}function M(e,t){const n=Object.create(null);for(const i of e)n[t(i)]=i;return n}function $(e,t){const n=Object.create(null);for(const[i,r]of Object.entries(e))n[i]=t(r,i);return n}function P(e){if(null===Object.getPrototypeOf(e))return e;const t=Object.create(null);for(const[n,i]of Object.entries(e))t[n]=i;return t}function j(e,t,n){const i=Object.create(null);for(const r of e)i[t(r)]=n(r);return i}function B(e,t){const[n,i]="string"==typeof e?[e,t]:[void 0,e];let r=" Did you mean ";n&&(r+=n+" ");const s=i.map((e=>`"${e}"`));switch(s.length){case 0:return"";case 1:return r+s[0]+"?";case 2:return r+s[0]+" or "+s[1]+"?"}const o=s.slice(0,5),a=o.pop();return r+o.join(", ")+", or "+a+"?"}function G(e){return e}function Y(e,t){let n=0,i=0;for(;n<e.length&&i<t.length;){let r=e.charCodeAt(n),s=t.charCodeAt(i);if(K(r)&&K(s)){let o=0;do{++n,o=10*o+r-J,r=e.charCodeAt(n)}while(K(r)&&o>0);let a=0;do{++i,a=10*a+s-J,s=t.charCodeAt(i)}while(K(s)&&a>0);if(o<a)return-1;if(o>a)return 1}else{if(r<s)return-1;if(r>s)return 1;++n,++i}}return e.length-t.length}const J=48;function K(e){return!isNaN(e)&&J<=e&&e<=57}function Q(e,t){const n=Object.create(null),i=new X(e),r=Math.floor(.4*e.length)+1;for(const e of t){const t=i.measure(e,r);void 0!==t&&(n[e]=t)}return Object.keys(n).sort(((e,t)=>{const i=n[e]-n[t];return 0!==i?i:Y(e,t)}))}class X{constructor(e){this._input=e,this._inputLowerCase=e.toLowerCase(),this._inputArray=q(this._inputLowerCase),this._rows=[new Array(e.length+1).fill(0),new Array(e.length+1).fill(0),new Array(e.length+1).fill(0)]}measure(e,t){if(this._input===e)return 0;const n=e.toLowerCase();if(this._inputLowerCase===n)return 1;let i=q(n),r=this._inputArray;if(i.length<r.length){const e=i;i=r,r=e}const s=i.length,o=r.length;if(s-o>t)return;const a=this._rows;for(let e=0;e<=o;e++)a[0][e]=e;for(let e=1;e<=s;e++){const n=a[(e-1)%3],s=a[e%3];let c=s[0]=e;for(let t=1;t<=o;t++){const o=i[e-1]===r[t-1]?0:1;let l=Math.min(n[t]+1,s[t-1]+1,n[t-1]+o);if(e>1&&t>1&&i[e-1]===r[t-2]&&i[e-2]===r[t-1]){const n=a[(e-2)%3][t-2];l=Math.min(l,n+1)}l<c&&(c=l),s[t]=l}if(c>t)return}const c=a[s%3][o];return c<=t?c:void 0}}function q(e){const t=e.length,n=new Array(t);for(let i=0;i<t;++i)n[i]=e.charCodeAt(i);return n}function z(e){return function(e,t){let n,i,r,s,o=Array.isArray(e),a=[e],c=-1,l=[];const u=[],d=[];let h=e;do{c++;const e=c===a.length,m=e&&0!==l.length;if(e){if(r=0===d.length?void 0:u[u.length-1],i=s,s=d.pop(),m){if(o)i=i.slice();else{const e={};for(const t of Object.keys(i))e[t]=i[t];i=e}let e=0;for(let t=0;t<l.length;t++){let n=l[t][0];const r=l[t][1];o&&(n-=e),o&&null===r?(i.splice(n,1),e++):i[n]=r}}c=n.index,a=n.keys,l=n.edits,o=n.inArray,n=n.prev}else{if(r=s?o?c:a[c]:void 0,i=s?s[r]:h,null==i)continue;s&&u.push(r)}let T;if(!Array.isArray(i)){if(!p(i))throw new Error(`Invalid AST Node: ${f(i)}.`);const n=V(t,i.kind,e);if(n){if(T=n.call(t,i,r,s,u,d),T===U)break;if(!1===T){if(!e){u.pop();continue}}else if(void 0!==T&&(l.push([r,T]),!e)){if(!p(T)){u.pop();continue}i=T}}}var E;void 0===T&&m&&l.push([r,i]),e?u.pop():(n={inArray:o,index:c,keys:a,edits:l,prev:n},o=Array.isArray(i),a=o?i:null!==(E=C[i.kind])&&void 0!==E?E:[],c=-1,l=[],s&&d.push(s),s=i)}while(void 0!==n);return 0!==l.length&&(h=l[l.length-1][1]),h}(e,H)}const H={Name:{leave:e=>e.value},Variable:{leave:e=>"$"+e.name},Document:{leave:e=>W(e.definitions,"\n\n")},OperationDefinition:{leave(e){const t=ee("(",W(e.variableDefinitions,", "),")"),n=W([e.operation,W([e.name,t]),W(e.directives," ")]," ");return("query"===n?"":n+" ")+e.selectionSet}},VariableDefinition:{leave:({variable:e,type:t,defaultValue:n,directives:i})=>e+": "+t+ee(" = ",n)+ee(" ",W(i," "))},SelectionSet:{leave:({selections:e})=>Z(e)},Field:{leave({alias:e,name:t,arguments:n,directives:i,selectionSet:r}){const s=ee("",e,": ")+t;let o=s+ee("(",W(n,", "),")");return o.length>80&&(o=s+ee("(\n",te(W(n,"\n")),"\n)")),W([o,W(i," "),r]," ")}},Argument:{leave:({name:e,value:t})=>e+": "+t},FragmentSpread:{leave:({name:e,directives:t})=>"..."+e+ee(" ",W(t," "))},InlineFragment:{leave:({typeCondition:e,directives:t,selectionSet:n})=>W(["...",ee("on ",e),W(t," "),n]," ")},FragmentDefinition:{leave:({name:e,typeCondition:t,variableDefinitions:n,directives:i,selectionSet:r})=>`fragment ${e}${ee("(",W(n,", "),")")} on ${t} ${ee("",W(i," ")," ")}`+r},IntValue:{leave:({value:e})=>e},FloatValue:{leave:({value:e})=>e},StringValue:{leave:({value:e,block:t})=>t?function(e,t=!1){const n=!e.includes("\n"),i=" "===e[0]||"\t"===e[0],r='"'===e[e.length-1],s="\\"===e[e.length-1],o=!n||r||s||t;let a="";return!o||n&&i||(a+="\n"),a+=e,o&&(a+="\n"),'"""'+a.replace(/"""/g,'\\"""')+'"""'}(e):JSON.stringify(e)},BooleanValue:{leave:({value:e})=>e?"true":"false"},NullValue:{leave:()=>"null"},EnumValue:{leave:({value:e})=>e},ListValue:{leave:({values:e})=>"["+W(e,", ")+"]"},ObjectValue:{leave:({fields:e})=>"{"+W(e,", ")+"}"},ObjectField:{leave:({name:e,value:t})=>e+": "+t},Directive:{leave:({name:e,arguments:t})=>"@"+e+ee("(",W(t,", "),")")},NamedType:{leave:({name:e})=>e},ListType:{leave:({type:e})=>"["+e+"]"},NonNullType:{leave:({type:e})=>e+"!"},SchemaDefinition:{leave:({description:e,directives:t,operationTypes:n})=>ee("",e,"\n")+W(["schema",W(t," "),Z(n)]," ")},OperationTypeDefinition:{leave:({operation:e,type:t})=>e+": "+t},ScalarTypeDefinition:{leave:({description:e,name:t,directives:n})=>ee("",e,"\n")+W(["scalar",t,W(n," ")]," ")},ObjectTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:i,fields:r})=>ee("",e,"\n")+W(["type",t,ee("implements ",W(n," & ")),W(i," "),Z(r)]," ")},FieldDefinition:{leave:({description:e,name:t,arguments:n,type:i,directives:r})=>ee("",e,"\n")+t+(ne(n)?ee("(\n",te(W(n,"\n")),"\n)"):ee("(",W(n,", "),")"))+": "+i+ee(" ",W(r," "))},InputValueDefinition:{leave:({description:e,name:t,type:n,defaultValue:i,directives:r})=>ee("",e,"\n")+W([t+": "+n,ee("= ",i),W(r," ")]," ")},InterfaceTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:i,fields:r})=>ee("",e,"\n")+W(["interface",t,ee("implements ",W(n," & ")),W(i," "),Z(r)]," ")},UnionTypeDefinition:{leave:({description:e,name:t,directives:n,types:i})=>ee("",e,"\n")+W(["union",t,W(n," "),ee("= ",W(i," | "))]," ")},EnumTypeDefinition:{leave:({description:e,name:t,directives:n,values:i})=>ee("",e,"\n")+W(["enum",t,W(n," "),Z(i)]," ")},EnumValueDefinition:{leave:({description:e,name:t,directives:n})=>ee("",e,"\n")+W([t,W(n," ")]," ")},InputObjectTypeDefinition:{leave:({description:e,name:t,directives:n,fields:i})=>ee("",e,"\n")+W(["input",t,W(n," "),Z(i)]," ")},DirectiveDefinition:{leave:({description:e,name:t,arguments:n,repeatable:i,locations:r})=>ee("",e,"\n")+"directive @"+t+(ne(n)?ee("(\n",te(W(n,"\n")),"\n)"):ee("(",W(n,", "),")"))+(i?" repeatable":"")+" on "+W(r," | ")},SchemaExtension:{leave:({directives:e,operationTypes:t})=>W(["extend schema",W(e," "),Z(t)]," ")},ScalarTypeExtension:{leave:({name:e,directives:t})=>W(["extend scalar",e,W(t," ")]," ")},ObjectTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:i})=>W(["extend type",e,ee("implements ",W(t," & ")),W(n," "),Z(i)]," ")},InterfaceTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:i})=>W(["extend interface",e,ee("implements ",W(t," & ")),W(n," "),Z(i)]," ")},UnionTypeExtension:{leave:({name:e,directives:t,types:n})=>W(["extend union",e,W(t," "),ee("= ",W(n," | "))]," ")},EnumTypeExtension:{leave:({name:e,directives:t,values:n})=>W(["extend enum",e,W(t," "),Z(n)]," ")},InputObjectTypeExtension:{leave:({name:e,directives:t,fields:n})=>W(["extend input",e,W(t," "),Z(n)]," ")}};function W(e,t=""){var n;return null!==(n=null==e?void 0:e.filter((e=>e)).join(t))&&void 0!==n?n:""}function Z(e){return ee("{\n",te(W(e,"\n")),"\n}")}function ee(e,t,n=""){return null!=t&&""!==t?e+t+n:""}function te(e){return ee("  ",e.replace(/\n/g,"\n  "))}function ne(e){var t;return null!==(t=null==e?void 0:e.some((e=>e.includes("\n"))))&&void 0!==t&&t}function ie(e,t){if(!Boolean(e))throw new Error(null!=t?t:"Unexpected invariant triggered.")}function re(e,t){switch(e.kind){case c.NULL:return null;case c.INT:return parseInt(e.value,10);case c.FLOAT:return parseFloat(e.value);case c.STRING:case c.ENUM:case c.BOOLEAN:return e.value;case c.LIST:return e.values.map((e=>re(e,t)));case c.OBJECT:return j(e.fields,(e=>e.name.value),(e=>re(e.value,t)));case c.VARIABLE:return null==t?void 0:t[e.name.value]}ie(!1,"Unexpected value node: "+f(e))}function se(e){return oe(e)||ae(e)||ce(e)||le(e)||ue(e)||pe(e)||de(e)||fe(e)}function oe(e){return m(e,be)}function ae(e){return m(e,Ae)}function ce(e){return m(e,Ce)}function le(e){return m(e,Ue)}function ue(e){return m(e,Me)}function pe(e){return m(e,Pe)}function de(e){return m(e,Ne)}function fe(e){return m(e,ve)}function he(e){return oe(e)||ue(e)||pe(e)||Ie(e)&&he(e.ofType)}function Ee(e){return oe(e)||ae(e)||ce(e)||le(e)||ue(e)||Ie(e)&&Ee(e.ofType)}function me(e){return oe(e)||ue(e)}function Te(e){return ae(e)||ce(e)||le(e)}function ye(e){return ce(e)||le(e)}class Ne{constructor(e){se(e)||E(!1,`Expected ${f(e)} to be a GraphQL type.`),this.ofType=e}toString(){return"["+String(this.ofType)+"]"}toJSON(){return this.toString()}get[Symbol.toStringTag](){return"GraphQLList"}}class ve{constructor(e){_e(e)||E(!1,`Expected ${f(e)} to be a GraphQL nullable type.`),this.ofType=e}toString(){return String(this.ofType)+"!"}toJSON(){return this.toString()}get[Symbol.toStringTag](){return"GraphQLNonNull"}}function Ie(e){return de(e)||fe(e)}function _e(e){return se(e)&&!fe(e)}function Oe(e){if(e){let t=e;for(;Ie(t);)t=t.ofType;return t}}function ge(e){return"function"==typeof e?e():e}function De(e){return"function"==typeof e?e():e}class be{constructor(e){var t,n,i,r;const s=null!==(t=e.parseValue)&&void 0!==t?t:G;this.name=e.name,this.description=e.description,this.specifiedByURL=e.specifiedByURL,this.serialize=null!==(n=e.serialize)&&void 0!==n?n:G,this.parseValue=s,this.parseLiteral=null!==(i=e.parseLiteral)&&void 0!==i?i:(e,t)=>s(re(e,t)),this.extensions=e.extensions&&P(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=null!==(r=e.extensionASTNodes)&&void 0!==r?r:[],"string"==typeof e.name||E(!1,"Must provide name."),null==e.specifiedByURL||"string"==typeof e.specifiedByURL||E(!1,`${this.name} must provide "specifiedByURL" as a string, but got: ${f(e.specifiedByURL)}.`),null==e.serialize||"function"==typeof e.serialize||E(!1,`${this.name} must provide "serialize" function. If this custom Scalar is also used as an input type, ensure "parseValue" and "parseLiteral" functions are also provided.`),e.parseLiteral&&("function"==typeof e.parseValue&&"function"==typeof e.parseLiteral||E(!1,`${this.name} must provide both "parseValue" and "parseLiteral" functions.`))}toConfig(){return{name:this.name,description:this.description,specifiedByURL:this.specifiedByURL,serialize:this.serialize,parseValue:this.parseValue,parseLiteral:this.parseLiteral,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}get[Symbol.toStringTag](){return"GraphQLScalarType"}}class Ae{constructor(e){var t;this.name=e.name,this.description=e.description,this.isTypeOf=e.isTypeOf,this.extensions=e.extensions&&P(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=null!==(t=e.extensionASTNodes)&&void 0!==t?t:[],this._fields=we.bind(void 0,e),this._interfaces=Se.bind(void 0,e),"string"==typeof e.name||E(!1,"Must provide name."),null==e.isTypeOf||"function"==typeof e.isTypeOf||E(!1,`${this.name} must provide "isTypeOf" as a function, but got: ${f(e.isTypeOf)}.`)}getFields(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields}getInterfaces(){return"function"==typeof this._interfaces&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:xe(this.getFields()),isTypeOf:this.isTypeOf,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}get[Symbol.toStringTag](){return"GraphQLObjectType"}}function Se(e){var t;const n=ge(null!==(t=e.interfaces)&&void 0!==t?t:[]);return Array.isArray(n)||E(!1,`${e.name} interfaces must be an Array or a function which returns an Array.`),n}function we(e){const t=De(e.fields);return Le(t)||E(!1,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),$(t,((t,n)=>{var i;Le(t)||E(!1,`${e.name}.${n} field config must be an object.`),null==t.resolve||"function"==typeof t.resolve||E(!1,`${e.name}.${n} field resolver must be a function if provided, but got: ${f(t.resolve)}.`);const r=null!==(i=t.args)&&void 0!==i?i:{};return Le(r)||E(!1,`${e.name}.${n} args must be an object with argument names as keys.`),{name:n,description:t.description,type:t.type,args:Re(r),resolve:t.resolve,subscribe:t.subscribe,deprecationReason:t.deprecationReason,extensions:t.extensions&&P(t.extensions),astNode:t.astNode}}))}function Re(e){return Object.entries(e).map((([e,t])=>({name:e,description:t.description,type:t.type,defaultValue:t.defaultValue,deprecationReason:t.deprecationReason,extensions:t.extensions&&P(t.extensions),astNode:t.astNode})))}function Le(e){return t(e)&&!Array.isArray(e)}function xe(e){return $(e,(e=>({description:e.description,type:e.type,args:Fe(e.args),resolve:e.resolve,subscribe:e.subscribe,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode})))}function Fe(e){return j(e,(e=>e.name),(e=>({description:e.description,type:e.type,defaultValue:e.defaultValue,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode})))}function ke(e){return fe(e.type)&&void 0===e.defaultValue}class Ce{constructor(e){var t;this.name=e.name,this.description=e.description,this.resolveType=e.resolveType,this.extensions=e.extensions&&P(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=null!==(t=e.extensionASTNodes)&&void 0!==t?t:[],this._fields=we.bind(void 0,e),this._interfaces=Se.bind(void 0,e),"string"==typeof e.name||E(!1,"Must provide name."),null==e.resolveType||"function"==typeof e.resolveType||E(!1,`${this.name} must provide "resolveType" as a function, but got: ${f(e.resolveType)}.`)}getFields(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields}getInterfaces(){return"function"==typeof this._interfaces&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:xe(this.getFields()),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}get[Symbol.toStringTag](){return"GraphQLInterfaceType"}}class Ue{constructor(e){var t;this.name=e.name,this.description=e.description,this.resolveType=e.resolveType,this.extensions=e.extensions&&P(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=null!==(t=e.extensionASTNodes)&&void 0!==t?t:[],this._types=Ve.bind(void 0,e),"string"==typeof e.name||E(!1,"Must provide name."),null==e.resolveType||"function"==typeof e.resolveType||E(!1,`${this.name} must provide "resolveType" as a function, but got: ${f(e.resolveType)}.`)}getTypes(){return"function"==typeof this._types&&(this._types=this._types()),this._types}toConfig(){return{name:this.name,description:this.description,types:this.getTypes(),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}get[Symbol.toStringTag](){return"GraphQLUnionType"}}function Ve(e){const t=ge(e.types);return Array.isArray(t)||E(!1,`Must provide Array of types or a function which returns such an array for Union ${e.name}.`),t}class Me{constructor(e){var t,n,i;this.name=e.name,this.description=e.description,this.extensions=e.extensions&&P(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=null!==(t=e.extensionASTNodes)&&void 0!==t?t:[],this._values=(n=this.name,Le(i=e.values)||E(!1,`${n} values must be an object with value names as keys.`),Object.entries(i).map((([e,t])=>(Le(t)||E(!1,`${n}.${e} must refer to an object with a "value" key representing an internal value but got: ${f(t)}.`),{name:e,description:t.description,value:void 0!==t.value?t.value:e,deprecationReason:t.deprecationReason,extensions:t.extensions&&P(t.extensions),astNode:t.astNode})))),this._valueLookup=new Map(this._values.map((e=>[e.value,e]))),this._nameLookup=M(this._values,(e=>e.name)),"string"==typeof e.name||E(!1,"Must provide name.")}getValues(){return this._values}getValue(e){return this._nameLookup[e]}serialize(e){const t=this._valueLookup.get(e);if(void 0===t)throw new o(`Enum "${this.name}" cannot represent value: ${f(e)}`);return t.name}parseValue(e){if("string"!=typeof e){const t=f(e);throw new o(`Enum "${this.name}" cannot represent non-string value: ${t}.`+$e(this,t))}const t=this.getValue(e);if(null==t)throw new o(`Value "${e}" does not exist in "${this.name}" enum.`+$e(this,e));return t.value}parseLiteral(e,t){if(e.kind!==c.ENUM){const t=z(e);throw new o(`Enum "${this.name}" cannot represent non-enum value: ${t}.`+$e(this,t),e)}const n=this.getValue(e.value);if(null==n){const t=z(e);throw new o(`Value "${t}" does not exist in "${this.name}" enum.`+$e(this,t),e)}return n.value}toConfig(){const e=j(this.getValues(),(e=>e.name),(e=>({description:e.description,value:e.value,deprecationReason:e.deprecationReason,extensions:e.extensions,astNode:e.astNode})));return{name:this.name,description:this.description,values:e,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}get[Symbol.toStringTag](){return"GraphQLEnumType"}}function $e(e,t){return B("the enum value",Q(t,e.getValues().map((e=>e.name))))}class Pe{constructor(e){var t;this.name=e.name,this.description=e.description,this.extensions=e.extensions&&P(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=null!==(t=e.extensionASTNodes)&&void 0!==t?t:[],this._fields=je.bind(void 0,e),"string"==typeof e.name||E(!1,"Must provide name.")}getFields(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields}toConfig(){const e=$(this.getFields(),(e=>({description:e.description,type:e.type,defaultValue:e.defaultValue,extensions:e.extensions,astNode:e.astNode})));return{name:this.name,description:this.description,fields:e,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}get[Symbol.toStringTag](){return"GraphQLInputObjectType"}}function je(e){const t=De(e.fields);return Le(t)||E(!1,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),$(t,((t,n)=>(!("resolve"in t)||E(!1,`${e.name}.${n} field has a resolve property, but Input Types cannot define resolvers.`),{name:n,description:t.description,type:t.type,defaultValue:t.defaultValue,deprecationReason:t.deprecationReason,extensions:t.extensions&&P(t.extensions),astNode:t.astNode})))}function Be(e,t,n){return t===n||(fe(n)?!!fe(t)&&Be(e,t.ofType,n.ofType):fe(t)?Be(e,t.ofType,n):de(n)?!!de(t)&&Be(e,t.ofType,n.ofType):!de(t)&&(ye(n)&&(ce(t)||ae(t))&&e.isSubType(n,t)))}function Ge(e,t,n){return t===n||(ye(t)?ye(n)?e.getPossibleTypes(t).some((t=>e.isSubType(n,t))):e.isSubType(t,n):!!ye(n)&&e.isSubType(n,t))}const Ye=2147483647,Je=-2147483648;const Ke=new be({name:"Int",description:"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",serialize:function(e){const t=Xe(e);if("boolean"==typeof t)return t?1:0;let n=t;if("string"==typeof t&&""!==t&&(n=Number(t)),"number"!=typeof n||!Number.isInteger(n))throw new o(`Int cannot represent non-integer value: ${f(t)}`);if(n>Ye||n<Je)throw new o("Int cannot represent non 32-bit signed integer value: "+f(t));return n},parseValue:function(e){if("number"!=typeof e||!Number.isInteger(e))throw new o(`Int cannot represent non-integer value: ${f(e)}`);if(e>Ye||e<Je)throw new o(`Int cannot represent non 32-bit signed integer value: ${e}`);return e},parseLiteral(e){if(e.kind!==c.INT)throw new o(`Int cannot represent non-integer value: ${z(e)}`,e);const t=parseInt(e.value,10);if(t>Ye||t<Je)throw new o(`Int cannot represent non 32-bit signed integer value: ${e.value}`,e);return t}});const Qe=new be({name:"Float",description:"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",serialize:function(e){const t=Xe(e);if("boolean"==typeof t)return t?1:0;let n=t;if("string"==typeof t&&""!==t&&(n=Number(t)),"number"!=typeof n||!Number.isFinite(n))throw new o(`Float cannot represent non numeric value: ${f(t)}`);return n},parseValue:function(e){if("number"!=typeof e||!Number.isFinite(e))throw new o(`Float cannot represent non numeric value: ${f(e)}`);return e},parseLiteral(e){if(e.kind!==c.FLOAT&&e.kind!==c.INT)throw new o(`Float cannot represent non numeric value: ${z(e)}`,e);return parseFloat(e.value)}});function Xe(e){if(t(e)){if("function"==typeof e.valueOf){const n=e.valueOf();if(!t(n))return n}if("function"==typeof e.toJSON)return e.toJSON()}return e}const qe=new be({name:"String",description:"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",serialize:function(e){const t=Xe(e);if("string"==typeof t)return t;if("boolean"==typeof t)return t?"true":"false";if("number"==typeof t&&Number.isFinite(t))return t.toString();throw new o(`String cannot represent value: ${f(e)}`)},parseValue:function(e){if("string"!=typeof e)throw new o(`String cannot represent a non string value: ${f(e)}`);return e},parseLiteral(e){if(e.kind!==c.STRING)throw new o(`String cannot represent a non string value: ${z(e)}`,e);return e.value}});const ze=new be({name:"Boolean",description:"The `Boolean` scalar type represents `true` or `false`.",serialize:function(e){const t=Xe(e);if("boolean"==typeof t)return t;if(Number.isFinite(t))return 0!==t;throw new o(`Boolean cannot represent a non boolean value: ${f(t)}`)},parseValue:function(e){if("boolean"!=typeof e)throw new o(`Boolean cannot represent a non boolean value: ${f(e)}`);return e},parseLiteral(e){if(e.kind!==c.BOOLEAN)throw new o(`Boolean cannot represent a non boolean value: ${z(e)}`,e);return e.value}});const He=new be({name:"ID",description:'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.',serialize:function(e){const t=Xe(e);if("string"==typeof t)return t;if(Number.isInteger(t))return String(t);throw new o(`ID cannot represent value: ${f(e)}`)},parseValue:function(e){if("string"==typeof e)return e;if("number"==typeof e&&Number.isInteger(e))return e.toString();throw new o(`ID cannot represent value: ${f(e)}`)},parseLiteral(e){if(e.kind!==c.STRING&&e.kind!==c.INT)throw new o("ID cannot represent a non-string and non-integer value: "+z(e),e);return e.value}}),We=Object.freeze([qe,Ke,Qe,ze,He]);function Ze(e,n){if(fe(n)){const t=Ze(e,n.ofType);return(null==t?void 0:t.kind)===c.NULL?null:t}if(null===e)return{kind:c.NULL};if(void 0===e)return null;if(de(n)){const t=n.ofType;if("object"==typeof(i=e)&&"function"==typeof(null==i?void 0:i[Symbol.iterator])){const n=[];for(const i of e){const e=Ze(i,t);null!=e&&n.push(e)}return{kind:c.LIST,values:n}}return Ze(e,t)}var i;if(pe(n)){if(!t(e))return null;const i=[];for(const t of Object.values(n.getFields())){const n=Ze(e[t.name],t.type);n&&i.push({kind:c.OBJECT_FIELD,name:{kind:c.NAME,value:t.name},value:n})}return{kind:c.OBJECT,fields:i}}if(me(n)){const t=n.serialize(e);if(null==t)return null;if("boolean"==typeof t)return{kind:c.BOOLEAN,value:t};if("number"==typeof t&&Number.isFinite(t)){const e=String(t);return et.test(e)?{kind:c.INT,value:e}:{kind:c.FLOAT,value:e}}if("string"==typeof t)return ue(n)?{kind:c.ENUM,value:t}:n===He&&et.test(t)?{kind:c.INT,value:t}:{kind:c.STRING,value:t};throw new TypeError(`Cannot convert value to AST: ${f(t)}.`)}ie(!1,"Unexpected input type: "+f(n))}const et=/^-?(?:0|[1-9][0-9]*)$/,tt=new Ae({name:"__Schema",description:"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",fields:()=>({description:{type:qe,resolve:e=>e.description},types:{description:"A list of all types supported by this server.",type:new ve(new Ne(new ve(rt))),resolve:e=>Object.values(e.getTypeMap())},queryType:{description:"The type that query operations will be rooted at.",type:new ve(rt),resolve:e=>e.getQueryType()},mutationType:{description:"If this server supports mutation, the type that mutation operations will be rooted at.",type:rt,resolve:e=>e.getMutationType()},subscriptionType:{description:"If this server support subscription, the type that subscription operations will be rooted at.",type:rt,resolve:e=>e.getSubscriptionType()},directives:{description:"A list of all directives supported by this server.",type:new ve(new Ne(new ve(nt))),resolve:e=>e.getDirectives()}})}),nt=new Ae({name:"__Directive",description:"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",fields:()=>({name:{type:new ve(qe),resolve:e=>e.name},description:{type:qe,resolve:e=>e.description},isRepeatable:{type:new ve(ze),resolve:e=>e.isRepeatable},locations:{type:new ve(new Ne(new ve(it))),resolve:e=>e.locations},args:{type:new ve(new Ne(new ve(ot))),resolve:e=>e.args}})}),it=new Me({name:"__DirectiveLocation",description:"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",values:{QUERY:{value:y.QUERY,description:"Location adjacent to a query operation."},MUTATION:{value:y.MUTATION,description:"Location adjacent to a mutation operation."},SUBSCRIPTION:{value:y.SUBSCRIPTION,description:"Location adjacent to a subscription operation."},FIELD:{value:y.FIELD,description:"Location adjacent to a field."},FRAGMENT_DEFINITION:{value:y.FRAGMENT_DEFINITION,description:"Location adjacent to a fragment definition."},FRAGMENT_SPREAD:{value:y.FRAGMENT_SPREAD,description:"Location adjacent to a fragment spread."},INLINE_FRAGMENT:{value:y.INLINE_FRAGMENT,description:"Location adjacent to an inline fragment."},VARIABLE_DEFINITION:{value:y.VARIABLE_DEFINITION,description:"Location adjacent to a variable definition."},SCHEMA:{value:y.SCHEMA,description:"Location adjacent to a schema definition."},SCALAR:{value:y.SCALAR,description:"Location adjacent to a scalar definition."},OBJECT:{value:y.OBJECT,description:"Location adjacent to an object type definition."},FIELD_DEFINITION:{value:y.FIELD_DEFINITION,description:"Location adjacent to a field definition."},ARGUMENT_DEFINITION:{value:y.ARGUMENT_DEFINITION,description:"Location adjacent to an argument definition."},INTERFACE:{value:y.INTERFACE,description:"Location adjacent to an interface definition."},UNION:{value:y.UNION,description:"Location adjacent to a union definition."},ENUM:{value:y.ENUM,description:"Location adjacent to an enum definition."},ENUM_VALUE:{value:y.ENUM_VALUE,description:"Location adjacent to an enum value definition."},INPUT_OBJECT:{value:y.INPUT_OBJECT,description:"Location adjacent to an input object type definition."},INPUT_FIELD_DEFINITION:{value:y.INPUT_FIELD_DEFINITION,description:"Location adjacent to an input object field definition."}}}),rt=new Ae({name:"__Type",description:"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",fields:()=>({kind:{type:new ve(lt),resolve:e=>oe(e)?ct.SCALAR:ae(e)?ct.OBJECT:ce(e)?ct.INTERFACE:le(e)?ct.UNION:ue(e)?ct.ENUM:pe(e)?ct.INPUT_OBJECT:de(e)?ct.LIST:fe(e)?ct.NON_NULL:void ie(!1,`Unexpected type: "${f(e)}".`)},name:{type:qe,resolve:e=>void 0!==e.name?e.name:void 0},description:{type:qe,resolve:e=>void 0!==e.description?e.description:void 0},specifiedByURL:{type:qe,resolve:e=>void 0!==e.specifiedByURL?e.specifiedByURL:void 0},fields:{type:new Ne(new ve(st)),args:{includeDeprecated:{type:ze,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(ae(e)||ce(e)){const n=Object.values(e.getFields());return t?n:n.filter((e=>null==e.deprecationReason))}}},interfaces:{type:new Ne(new ve(rt)),resolve(e){if(ae(e)||ce(e))return e.getInterfaces()}},possibleTypes:{type:new Ne(new ve(rt)),resolve(e,t,n,{schema:i}){if(ye(e))return i.getPossibleTypes(e)}},enumValues:{type:new Ne(new ve(at)),args:{includeDeprecated:{type:ze,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(ue(e)){const n=e.getValues();return t?n:n.filter((e=>null==e.deprecationReason))}}},inputFields:{type:new Ne(new ve(ot)),args:{includeDeprecated:{type:ze,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(pe(e)){const n=Object.values(e.getFields());return t?n:n.filter((e=>null==e.deprecationReason))}}},ofType:{type:rt,resolve:e=>void 0!==e.ofType?e.ofType:void 0}})}),st=new Ae({name:"__Field",description:"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",fields:()=>({name:{type:new ve(qe),resolve:e=>e.name},description:{type:qe,resolve:e=>e.description},args:{type:new ve(new Ne(new ve(ot))),args:{includeDeprecated:{type:ze,defaultValue:!1}},resolve:(e,{includeDeprecated:t})=>t?e.args:e.args.filter((e=>null==e.deprecationReason))},type:{type:new ve(rt),resolve:e=>e.type},isDeprecated:{type:new ve(ze),resolve:e=>null!=e.deprecationReason},deprecationReason:{type:qe,resolve:e=>e.deprecationReason}})}),ot=new Ae({name:"__InputValue",description:"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",fields:()=>({name:{type:new ve(qe),resolve:e=>e.name},description:{type:qe,resolve:e=>e.description},type:{type:new ve(rt),resolve:e=>e.type},defaultValue:{type:qe,description:"A GraphQL-formatted string representing the default value for this input value.",resolve(e){const{type:t,defaultValue:n}=e,i=Ze(n,t);return i?z(i):null}},isDeprecated:{type:new ve(ze),resolve:e=>null!=e.deprecationReason},deprecationReason:{type:qe,resolve:e=>e.deprecationReason}})}),at=new Ae({name:"__EnumValue",description:"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",fields:()=>({name:{type:new ve(qe),resolve:e=>e.name},description:{type:qe,resolve:e=>e.description},isDeprecated:{type:new ve(ze),resolve:e=>null!=e.deprecationReason},deprecationReason:{type:qe,resolve:e=>e.deprecationReason}})}),ct=Object.freeze({SCALAR:"SCALAR",OBJECT:"OBJECT",INTERFACE:"INTERFACE",UNION:"UNION",ENUM:"ENUM",INPUT_OBJECT:"INPUT_OBJECT",LIST:"LIST",NON_NULL:"NON_NULL"}),lt=new Me({name:"__TypeKind",description:"An enum describing what kind of type a given `__Type` is.",values:{SCALAR:{value:ct.SCALAR,description:"Indicates this type is a scalar."},OBJECT:{value:ct.OBJECT,description:"Indicates this type is an object. `fields` and `interfaces` are valid fields."},INTERFACE:{value:ct.INTERFACE,description:"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields."},UNION:{value:ct.UNION,description:"Indicates this type is a union. `possibleTypes` is a valid field."},ENUM:{value:ct.ENUM,description:"Indicates this type is an enum. `enumValues` is a valid field."},INPUT_OBJECT:{value:ct.INPUT_OBJECT,description:"Indicates this type is an input object. `inputFields` is a valid field."},LIST:{value:ct.LIST,description:"Indicates this type is a list. `ofType` is a valid field."},NON_NULL:{value:ct.NON_NULL,description:"Indicates this type is a non-null. `ofType` is a valid field."}}});new ve(tt),new ve(qe),new ve(qe);const ut=Object.freeze([tt,nt,it,rt,st,ot,at,lt]);function pt(e){return m(e,dt)}class dt{constructor(e){var n,i;this.name=e.name,this.description=e.description,this.locations=e.locations,this.isRepeatable=null!==(n=e.isRepeatable)&&void 0!==n&&n,this.extensions=e.extensions&&P(e.extensions),this.astNode=e.astNode,e.name||E(!1,"Directive must be named."),Array.isArray(e.locations)||E(!1,`@${e.name} locations must be an Array.`);const r=null!==(i=e.args)&&void 0!==i?i:{};t(r)&&!Array.isArray(r)||E(!1,`@${e.name} args must be an object with argument names as keys.`),this.args=Re(r)}toConfig(){return{name:this.name,description:this.description,locations:this.locations,args:Fe(this.args),isRepeatable:this.isRepeatable,extensions:this.extensions,astNode:this.astNode}}toString(){return"@"+this.name}toJSON(){return this.toString()}get[Symbol.toStringTag](){return"GraphQLDirective"}}const ft=new dt({name:"include",description:"Directs the executor to include this field or fragment only when the `if` argument is true.",locations:[y.FIELD,y.FRAGMENT_SPREAD,y.INLINE_FRAGMENT],args:{if:{type:new ve(ze),description:"Included when true."}}}),ht=new dt({name:"skip",description:"Directs the executor to skip this field or fragment when the `if` argument is true.",locations:[y.FIELD,y.FRAGMENT_SPREAD,y.INLINE_FRAGMENT],args:{if:{type:new ve(ze),description:"Skipped when true."}}}),Et=new dt({name:"deprecated",description:"Marks an element of a GraphQL schema as no longer supported.",locations:[y.FIELD_DEFINITION,y.ARGUMENT_DEFINITION,y.INPUT_FIELD_DEFINITION,y.ENUM_VALUE],args:{reason:{type:qe,description:"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",defaultValue:"No longer supported"}}}),mt=new dt({name:"specifiedBy",description:"Exposes a URL that specifies the behaviour of this scalar.",locations:[y.SCALAR],args:{url:{type:new ve(qe),description:"The URL that specifies the behaviour of this scalar."}}}),Tt=Object.freeze([ft,ht,Et,mt]);class yt{constructor(e){var n,i;this.__validationErrors=!0===e.assumeValid?[]:void 0,t(e)||E(!1,"Must provide configuration object."),!e.types||Array.isArray(e.types)||E(!1,`"types" must be Array if provided but got: ${f(e.types)}.`),!e.directives||Array.isArray(e.directives)||E(!1,`"directives" must be Array if provided but got: ${f(e.directives)}.`),this.description=e.description,this.extensions=e.extensions&&P(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=null!==(n=e.extensionASTNodes)&&void 0!==n?n:[],this._queryType=e.query,this._mutationType=e.mutation,this._subscriptionType=e.subscription,this._directives=null!==(i=e.directives)&&void 0!==i?i:Tt;const r=new Set(e.types);if(null!=e.types)for(const t of e.types)r.delete(t),Nt(t,r);null!=this._queryType&&Nt(this._queryType,r),null!=this._mutationType&&Nt(this._mutationType,r),null!=this._subscriptionType&&Nt(this._subscriptionType,r);for(const e of this._directives)if(pt(e))for(const t of e.args)Nt(t.type,r);Nt(tt,r),this._typeMap=Object.create(null),this._subTypeMap=Object.create(null),this._implementationsMap=Object.create(null);for(const e of r){if(null==e)continue;const t=e.name;if(t||E(!1,"One of the provided types for building the Schema is missing a name."),void 0!==this._typeMap[t])throw new Error(`Schema must contain uniquely named types but contains multiple types named "${t}".`);if(this._typeMap[t]=e,ce(e)){for(const t of e.getInterfaces())if(ce(t)){let n=this._implementationsMap[t.name];void 0===n&&(n=this._implementationsMap[t.name]={objects:[],interfaces:[]}),n.interfaces.push(e)}}else if(ae(e))for(const t of e.getInterfaces())if(ce(t)){let n=this._implementationsMap[t.name];void 0===n&&(n=this._implementationsMap[t.name]={objects:[],interfaces:[]}),n.objects.push(e)}}}getQueryType(){return this._queryType}getMutationType(){return this._mutationType}getSubscriptionType(){return this._subscriptionType}getTypeMap(){return this._typeMap}getType(e){return this.getTypeMap()[e]}getPossibleTypes(e){return le(e)?e.getTypes():this.getImplementations(e).objects}getImplementations(e){const t=this._implementationsMap[e.name];return null!=t?t:{objects:[],interfaces:[]}}isSubType(e,t){let n=this._subTypeMap[e.name];if(void 0===n){if(n=Object.create(null),le(e))for(const t of e.getTypes())n[t.name]=!0;else{const t=this.getImplementations(e);for(const e of t.objects)n[e.name]=!0;for(const e of t.interfaces)n[e.name]=!0}this._subTypeMap[e.name]=n}return void 0!==n[t.name]}getDirectives(){return this._directives}getDirective(e){return this.getDirectives().find((t=>t.name===e))}toConfig(){return{description:this.description,query:this.getQueryType(),mutation:this.getMutationType(),subscription:this.getSubscriptionType(),types:Object.values(this.getTypeMap()),directives:this.getDirectives().slice(),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes,assumeValid:void 0!==this.__validationErrors}}get[Symbol.toStringTag](){return"GraphQLSchema"}}function Nt(e,t){const n=Oe(e);if(!t.has(n))if(t.add(n),le(n))for(const e of n.getTypes())Nt(e,t);else if(ae(n)||ce(n)){for(const e of n.getInterfaces())Nt(e,t);for(const e of Object.values(n.getFields())){Nt(e.type,t);for(const n of e.args)Nt(n.type,t)}}else if(pe(n))for(const e of Object.values(n.getFields()))Nt(e.type,t);return t}function vt(e,t){let n;return t.kind===c.LIST_TYPE?(n=vt(e,t.type),n&&new Ne(n)):t.kind===c.NON_NULL_TYPE?(n=vt(e,t.type),n&&new ve(n)):t.kind===c.NAMED_TYPE?e.getType(t.name.value):void ie(!1,"Unexpected type node: "+f(t))}function It(e){return e.kind===c.OPERATION_DEFINITION||e.kind===c.FRAGMENT_DEFINITION}function _t(e){return e.kind===c.SCALAR_TYPE_DEFINITION||e.kind===c.OBJECT_TYPE_DEFINITION||e.kind===c.INTERFACE_TYPE_DEFINITION||e.kind===c.UNION_TYPE_DEFINITION||e.kind===c.ENUM_TYPE_DEFINITION||e.kind===c.INPUT_OBJECT_TYPE_DEFINITION}function Ot(e){return e.kind===c.SCALAR_TYPE_EXTENSION||e.kind===c.OBJECT_TYPE_EXTENSION||e.kind===c.INTERFACE_TYPE_EXTENSION||e.kind===c.UNION_TYPE_EXTENSION||e.kind===c.ENUM_TYPE_EXTENSION||e.kind===c.INPUT_OBJECT_TYPE_EXTENSION}function gt(e){const t=e.getSchema(),n=t?t.getTypeMap():Object.create(null),i=Object.create(null);for(const t of e.getDocument().definitions)_t(t)&&(i[t.name.value]=!0);const r=[...Object.keys(n),...Object.keys(i)];return{NamedType(t,s,a,l,u){const p=t.name.value;if(!n[p]&&!i[p]){var d;const n=null!==(d=u[2])&&void 0!==d?d:a,i=null!=n&&(f=n,!Array.isArray(f)&&(function(e){return e.kind===c.SCHEMA_DEFINITION||_t(e)||e.kind===c.DIRECTIVE_DEFINITION}(f)||function(e){return e.kind===c.SCHEMA_EXTENSION||Ot(e)}(f)));if(i&&Dt.includes(p))return;const s=Q(p,i?Dt.concat(r):r);e.reportError(new o(`Unknown type "${p}".`+B(s),t))}var f}}}const Dt=[...We,...ut].map((e=>e.name));function bt(e){const t=Object.create(null),n=e.getSchema(),i=n?n.getDirectives():Tt;for(const e of i)t[e.name]=e.locations;const r=e.getDocument().definitions;for(const e of r)e.kind===c.DIRECTIVE_DEFINITION&&(t[e.name.value]=e.locations.map((e=>e.value)));return{Directive(n,i,r,s,a){const l=n.name.value,u=t[l];if(!u)return void e.reportError(new o(`Unknown directive "@${l}".`,n));const p=function(e){const t=e[e.length-1];switch(!Array.isArray(t)||ie(!1),t.kind){case c.OPERATION_DEFINITION:return function(e){switch(e){case"query":return y.QUERY;case"mutation":return y.MUTATION;case"subscription":return y.SUBSCRIPTION}ie(!1,"Unexpected operation: "+f(e))}(t.operation);case c.FIELD:return y.FIELD;case c.FRAGMENT_SPREAD:return y.FRAGMENT_SPREAD;case c.INLINE_FRAGMENT:return y.INLINE_FRAGMENT;case c.FRAGMENT_DEFINITION:return y.FRAGMENT_DEFINITION;case c.VARIABLE_DEFINITION:return y.VARIABLE_DEFINITION;case c.SCHEMA_DEFINITION:case c.SCHEMA_EXTENSION:return y.SCHEMA;case c.SCALAR_TYPE_DEFINITION:case c.SCALAR_TYPE_EXTENSION:return y.SCALAR;case c.OBJECT_TYPE_DEFINITION:case c.OBJECT_TYPE_EXTENSION:return y.OBJECT;case c.FIELD_DEFINITION:return y.FIELD_DEFINITION;case c.INTERFACE_TYPE_DEFINITION:case c.INTERFACE_TYPE_EXTENSION:return y.INTERFACE;case c.UNION_TYPE_DEFINITION:case c.UNION_TYPE_EXTENSION:return y.UNION;case c.ENUM_TYPE_DEFINITION:case c.ENUM_TYPE_EXTENSION:return y.ENUM;case c.ENUM_VALUE_DEFINITION:return y.ENUM_VALUE;case c.INPUT_OBJECT_TYPE_DEFINITION:case c.INPUT_OBJECT_TYPE_EXTENSION:return y.INPUT_OBJECT;case c.INPUT_VALUE_DEFINITION:return e[e.length-3].kind===c.INPUT_OBJECT_TYPE_DEFINITION?y.INPUT_FIELD_DEFINITION:y.ARGUMENT_DEFINITION}}(a);p&&!u.includes(p)&&e.reportError(new o(`Directive "@${l}" may not be used on ${p}.`,n))}}}function At(e){const t=Object.create(null),n=e.getSchema(),i=n?n.getDirectives():Tt;for(const e of i)t[e.name]=!e.isRepeatable;const r=e.getDocument().definitions;for(const e of r)e.kind===c.DIRECTIVE_DEFINITION&&(t[e.name.value]=!e.repeatable);const s=Object.create(null),a=Object.create(null);return{enter(n){if(null==n.directives)return;let i;if(n.kind===c.SCHEMA_DEFINITION||n.kind===c.SCHEMA_EXTENSION)i=s;else if(_t(n)||Ot(n)){const e=n.name.value;i=a[e],void 0===i&&(a[e]=i=Object.create(null))}else i=Object.create(null);for(const r of n.directives){const n=r.name.value;t[n]&&(i[n]?e.reportError(new o(`The directive "@${n}" can only be used once at this location.`,[i[n],r])):i[n]=r)}}}}function St(e){const t=Object.create(null),n=e.getSchema(),i=n?n.getDirectives():Tt;for(const e of i)t[e.name]=e.args.map((e=>e.name));const r=e.getDocument().definitions;for(const e of r)if(e.kind===c.DIRECTIVE_DEFINITION){var s;const n=null!==(s=e.arguments)&&void 0!==s?s:[];t[e.name.value]=n.map((e=>e.name.value))}return{Directive(n){const i=n.name.value,r=t[i];if(n.arguments&&r)for(const t of n.arguments){const n=t.name.value;if(!r.includes(n)){const s=Q(n,r);e.reportError(new o(`Unknown argument "${n}" on directive "@${i}".`+B(s),t))}}return!1}}}function wt(e){let t=Object.create(null);return{Field(){t=Object.create(null)},Directive(){t=Object.create(null)},Argument(n){const i=n.name.value;return t[i]?e.reportError(new o(`There can be only one argument named "${i}".`,[t[i],n.name])):t[i]=n.name,!1}}}function Rt(e,t){const n=e.getInputType();if(!n)return;const i=Oe(n);if(me(i))try{if(void 0===i.parseLiteral(t,void 0)){const i=f(n);e.reportError(new o(`Expected value of type "${i}", found ${z(t)}.`,t))}}catch(i){const r=f(n);i instanceof o?e.reportError(i):e.reportError(new o(`Expected value of type "${r}", found ${z(t)}; `+i.message,t,void 0,void 0,void 0,i))}else{const i=f(n);e.reportError(new o(`Expected value of type "${i}", found ${z(t)}.`,t))}}function Lt(e){var t;const n=Object.create(null),i=e.getSchema(),r=null!==(t=null==i?void 0:i.getDirectives())&&void 0!==t?t:Tt;for(const e of r)n[e.name]=M(e.args.filter(ke),(e=>e.name));const s=e.getDocument().definitions;for(const e of s)if(e.kind===c.DIRECTIVE_DEFINITION){var a;const t=null!==(a=e.arguments)&&void 0!==a?a:[];n[e.name.value]=M(t.filter(xt),(e=>e.name.value))}return{Directive:{leave(t){const i=t.name.value,r=n[i];if(r){var s;const n=null!==(s=t.arguments)&&void 0!==s?s:[],a=new Set(n.map((e=>e.name.value)));for(const[n,s]of Object.entries(r))if(!a.has(n)){const r=se(s.type)?f(s.type):z(s.type);e.reportError(new o(`Directive "@${i}" argument "${n}" of type "${r}" is required, but it was not provided.`,t))}}}}}}function xt(e){return e.type.kind===c.NON_NULL_TYPE&&null==e.defaultValue}function Ft(e,t,n,i,r){if(fe(i)&&!fe(t)){const s=void 0!==r;if(!(null!=n&&n.kind!==c.NULL)&&!s)return!1;return Be(e,t,i.ofType)}return Be(e,t,i)}function kt(e){return Array.isArray(e)?e.map((([e,t])=>`subfields "${e}" conflict because `+kt(t))).join(" and "):e}function Ct(e,t,n,i,r,s,o){const a=e.getFragment(o);if(!a)return;const[c,l]=jt(e,n,a);if(s!==c){Vt(e,t,n,i,r,s,c);for(let o=0;o<l.length;o++)Ct(e,t,n,i,r,s,l[o])}}function Ut(e,t,n,i,r,s,o){if(s===o)return;if(i.has(s,o,r))return;i.add(s,o,r);const a=e.getFragment(s),c=e.getFragment(o);if(!a||!c)return;const[l,u]=jt(e,n,a),[p,d]=jt(e,n,c);Vt(e,t,n,i,r,l,p);for(let o=0;o<d.length;o++)Ut(e,t,n,i,r,s,d[o]);for(let s=0;s<u.length;s++)Ut(e,t,n,i,r,u[s],o)}function Vt(e,t,n,i,r,s,o){for(const[a,c]of Object.entries(s)){const s=o[a];if(s)for(let o=0;o<c.length;o++)for(let l=0;l<s.length;l++){const u=Mt(e,n,i,r,a,c[o],s[l]);u&&t.push(u)}}}function Mt(e,t,n,i,r,s,o){const[a,c,l]=s,[u,p,d]=o,h=i||a!==u&&ae(a)&&ae(u);if(!h){var E,m;const e=c.name.value,t=p.name.value;if(e!==t)return[[r,`"${e}" and "${t}" are different fields`],[c],[p]];if(!function(e,t){if(e.length!==t.length)return!1;return e.every((e=>{const n=t.find((t=>t.name.value===e.name.value));return!!n&&(i=e.value,r=n.value,z(i)===z(r));var i,r}))}(null!==(E=c.arguments)&&void 0!==E?E:[],null!==(m=p.arguments)&&void 0!==m?m:[]))return[[r,"they have differing arguments"],[c],[p]]}const T=null==l?void 0:l.type,y=null==d?void 0:d.type;if(T&&y&&$t(T,y))return[[r,`they return conflicting types "${f(T)}" and "${f(y)}"`],[c],[p]];const N=c.selectionSet,v=p.selectionSet;if(N&&v){return function(e,t,n,i){if(e.length>0)return[[t,e.map((([e])=>e))],[n,...e.map((([,e])=>e)).flat()],[i,...e.map((([,,e])=>e)).flat()]]}(function(e,t,n,i,r,s,o,a){const c=[],[l,u]=Pt(e,t,r,s),[p,d]=Pt(e,t,o,a);if(Vt(e,c,t,n,i,l,p),0!==d.length)for(let r=0;r<d.length;r++)Ct(e,c,t,n,i,l,d[r]);if(0!==u.length)for(let r=0;r<u.length;r++)Ct(e,c,t,n,i,p,u[r]);for(let r=0;r<u.length;r++)for(let s=0;s<d.length;s++)Ut(e,c,t,n,i,u[r],d[s]);return c}(e,t,n,h,Oe(T),N,Oe(y),v),r,c,p)}}function $t(e,t){return de(e)?!de(t)||$t(e.ofType,t.ofType):!!de(t)||(fe(e)?!fe(t)||$t(e.ofType,t.ofType):!!fe(t)||!(!me(e)&&!me(t))&&e!==t)}function Pt(e,t,n,i){let r=t.get(i);if(!r){const s=Object.create(null),o=Object.create(null);Bt(e,n,i,s,o),r=[s,Object.keys(o)],t.set(i,r)}return r}function jt(e,t,n){const i=t.get(n.selectionSet);if(i)return i;const r=vt(e.getSchema(),n.typeCondition);return Pt(e,t,r,n.selectionSet)}function Bt(e,t,n,i,r){for(const s of n.selections)switch(s.kind){case c.FIELD:{const e=s.name.value;let n;(ae(t)||ce(t))&&(n=t.getFields()[e]);const r=s.alias?s.alias.value:e;i[r]||(i[r]=[]),i[r].push([t,s,n]);break}case c.FRAGMENT_SPREAD:r[s.name.value]=!0;break;case c.INLINE_FRAGMENT:{const n=s.typeCondition,o=n?vt(e.getSchema(),n):t;Bt(e,o,s.selectionSet,i,r);break}}}class Gt{constructor(){this._data=Object.create(null)}has(e,t,n){const i=this._data[e],r=i&&i[t];return void 0!==r&&(!1!==n||!1===r)}add(e,t,n){this._pairSetAdd(e,t,n),this._pairSetAdd(t,e,n)}_pairSetAdd(e,t,n){let i=this._data[e];i||(i=Object.create(null),this._data[e]=i),i[t]=n}}function Yt(e){const t=[];let n=Object.create(null);return{ObjectValue:{enter(){t.push(n),n=Object.create(null)},leave(){n=t.pop()}},ObjectField(t){const i=t.name.value;n[i]?e.reportError(new o(`There can be only one input field named "${i}".`,[n[i],t.name])):n[i]=t.name}}}function Jt(e,t){return!!(ae(e)||ce(e)||pe(e))&&null!=e.getFields()[t]}const Kt={[c.SCALAR_TYPE_DEFINITION]:c.SCALAR_TYPE_EXTENSION,[c.OBJECT_TYPE_DEFINITION]:c.OBJECT_TYPE_EXTENSION,[c.INTERFACE_TYPE_DEFINITION]:c.INTERFACE_TYPE_EXTENSION,[c.UNION_TYPE_DEFINITION]:c.UNION_TYPE_EXTENSION,[c.ENUM_TYPE_DEFINITION]:c.ENUM_TYPE_EXTENSION,[c.INPUT_OBJECT_TYPE_DEFINITION]:c.INPUT_OBJECT_TYPE_EXTENSION};function Qt(e,t,n){if(e){if(e.kind===c.VARIABLE){const i=e.name.value;if(null==n||void 0===n[i])return;const r=n[i];if(null===r&&fe(t))return;return r}if(fe(t)){if(e.kind===c.NULL)return;return Qt(e,t.ofType,n)}if(e.kind===c.NULL)return null;if(de(t)){const i=t.ofType;if(e.kind===c.LIST){const t=[];for(const r of e.values)if(Xt(r,n)){if(fe(i))return;t.push(null)}else{const e=Qt(r,i,n);if(void 0===e)return;t.push(e)}return t}const r=Qt(e,i,n);if(void 0===r)return;return[r]}if(pe(t)){if(e.kind!==c.OBJECT)return;const i=Object.create(null),r=M(e.fields,(e=>e.name.value));for(const e of Object.values(t.getFields())){const t=r[e.name];if(!t||Xt(t.value,n)){if(void 0!==e.defaultValue)i[e.name]=e.defaultValue;else if(fe(e.type))return;continue}const s=Qt(t.value,e.type,n);if(void 0===s)return;i[e.name]=s}return i}if(me(t)){let i;try{i=t.parseLiteral(e,n)}catch(e){return}if(void 0===i)return;return i}ie(!1,"Unexpected input type: "+f(t))}}function Xt(e,t){return e.kind===c.VARIABLE&&(null==t||void 0===t[e.name.value])}return Object.freeze([function(e){return{Document(t){for(const n of t.definitions)if(!It(n)){const t=n.kind===c.SCHEMA_DEFINITION||n.kind===c.SCHEMA_EXTENSION?"schema":'"'+n.name.value+'"';e.reportError(new o(`The ${t} definition is not executable.`,n))}return!1}}},function(e){const t=Object.create(null);return{OperationDefinition(n){const i=n.name;return i&&(t[i.value]?e.reportError(new o(`There can be only one operation named "${i.value}".`,[t[i.value],i])):t[i.value]=i),!1},FragmentDefinition:()=>!1}},function(e){let t=0;return{Document(e){t=e.definitions.filter((e=>e.kind===c.OPERATION_DEFINITION)).length},OperationDefinition(n){!n.name&&t>1&&e.reportError(new o("This anonymous operation must be the only defined operation.",n))}}},function(e){return{OperationDefinition(t){"subscription"===t.operation&&1!==t.selectionSet.selections.length&&e.reportError(new o(t.name?`Subscription "${t.name.value}" must select only one top level field.`:"Anonymous Subscription must select only one top level field.",t.selectionSet.selections.slice(1)))}}},gt,function(e){return{InlineFragment(t){const n=t.typeCondition;if(n){const t=vt(e.getSchema(),n);if(t&&!Te(t)){const t=z(n);e.reportError(new o(`Fragment cannot condition on non composite type "${t}".`,n))}}},FragmentDefinition(t){const n=vt(e.getSchema(),t.typeCondition);if(n&&!Te(n)){const n=z(t.typeCondition);e.reportError(new o(`Fragment "${t.name.value}" cannot condition on non composite type "${n}".`,t.typeCondition))}}}},function(e){return{VariableDefinition(t){const n=vt(e.getSchema(),t.type);if(n&&!he(n)){const n=t.variable.name.value,i=z(t.type);e.reportError(new o(`Variable "$${n}" cannot be non-input type "${i}".`,t.type))}}}},function(e){return{Field(t){const n=e.getType(),i=t.selectionSet;if(n)if(me(Oe(n))){if(i){const r=t.name.value,s=f(n);e.reportError(new o(`Field "${r}" must not have a selection since type "${s}" has no subfields.`,i))}}else if(!i){const i=t.name.value,r=f(n);e.reportError(new o(`Field "${i}" of type "${r}" must have a selection of subfields. Did you mean "${i} { ... }"?`,t))}}}},function(e){return{Field(t){const n=e.getParentType();if(n){if(!e.getFieldDef()){const i=e.getSchema(),r=t.name.value;let s=B("to use an inline fragment on",function(e,t,n){if(!ye(t))return[];const i=new Set,r=Object.create(null);for(const o of e.getPossibleTypes(t))if(o.getFields()[n]){i.add(o),r[o.name]=1;for(const e of o.getInterfaces()){var s;e.getFields()[n]&&(i.add(e),r[e.name]=(null!==(s=r[e.name])&&void 0!==s?s:0)+1)}}return[...i].sort(((t,n)=>{const i=r[n.name]-r[t.name];return 0!==i?i:ce(t)&&e.isSubType(t,n)?-1:ce(n)&&e.isSubType(n,t)?1:Y(t.name,n.name)})).map((e=>e.name))}(i,n,r));""===s&&(s=B(function(e,t){if(ae(e)||ce(e)){return Q(t,Object.keys(e.getFields()))}return[]}(n,r))),e.reportError(new o(`Cannot query field "${r}" on type "${n.name}".`+s,t))}}}}},function(e){const t=Object.create(null);return{OperationDefinition:()=>!1,FragmentDefinition(n){const i=n.name.value;return t[i]?e.reportError(new o(`There can be only one fragment named "${i}".`,[t[i],n.name])):t[i]=n.name,!1}}},function(e){return{FragmentSpread(t){const n=t.name.value;e.getFragment(n)||e.reportError(new o(`Unknown fragment "${n}".`,t.name))}}},function(e){const t=[],n=[];return{OperationDefinition:e=>(t.push(e),!1),FragmentDefinition:e=>(n.push(e),!1),Document:{leave(){const i=Object.create(null);for(const n of t)for(const t of e.getRecursivelyReferencedFragments(n))i[t.name.value]=!0;for(const t of n){const n=t.name.value;!0!==i[n]&&e.reportError(new o(`Fragment "${n}" is never used.`,t))}}}}},function(e){return{InlineFragment(t){const n=e.getType(),i=e.getParentType();if(Te(n)&&Te(i)&&!Ge(e.getSchema(),n,i)){const r=f(i),s=f(n);e.reportError(new o(`Fragment cannot be spread here as objects of type "${r}" can never be of type "${s}".`,t))}},FragmentSpread(t){const n=t.name.value,i=function(e,t){const n=e.getFragment(t);if(n){const t=vt(e.getSchema(),n.typeCondition);if(Te(t))return t}}(e,n),r=e.getParentType();if(i&&r&&!Ge(e.getSchema(),i,r)){const s=f(r),a=f(i);e.reportError(new o(`Fragment "${n}" cannot be spread here as objects of type "${s}" can never be of type "${a}".`,t))}}}},function(e){const t=Object.create(null),n=[],i=Object.create(null);return{OperationDefinition:()=>!1,FragmentDefinition:e=>(r(e),!1)};function r(s){if(t[s.name.value])return;const a=s.name.value;t[a]=!0;const c=e.getFragmentSpreads(s.selectionSet);if(0!==c.length){i[a]=n.length;for(const t of c){const s=t.name.value,a=i[s];if(n.push(t),void 0===a){const t=e.getFragment(s);t&&r(t)}else{const t=n.slice(a),i=t.slice(0,-1).map((e=>'"'+e.name.value+'"')).join(", ");e.reportError(new o(`Cannot spread fragment "${s}" within itself`+(""!==i?` via ${i}.`:"."),t))}n.pop()}i[a]=void 0}}},function(e){let t=Object.create(null);return{OperationDefinition(){t=Object.create(null)},VariableDefinition(n){const i=n.variable.name.value;t[i]?e.reportError(new o(`There can be only one variable named "$${i}".`,[t[i],n.variable.name])):t[i]=n.variable.name}}},function(e){let t=Object.create(null);return{OperationDefinition:{enter(){t=Object.create(null)},leave(n){const i=e.getRecursiveVariableUsages(n);for(const{node:r}of i){const i=r.name.value;!0!==t[i]&&e.reportError(new o(n.name?`Variable "$${i}" is not defined by operation "${n.name.value}".`:`Variable "$${i}" is not defined.`,[r,n]))}}},VariableDefinition(e){t[e.variable.name.value]=!0}}},function(e){let t=[];return{OperationDefinition:{enter(){t=[]},leave(n){const i=Object.create(null),r=e.getRecursiveVariableUsages(n);for(const{node:e}of r)i[e.name.value]=!0;for(const r of t){const t=r.variable.name.value;!0!==i[t]&&e.reportError(new o(n.name?`Variable "$${t}" is never used in operation "${n.name.value}".`:`Variable "$${t}" is never used.`,r))}}},VariableDefinition(e){t.push(e)}}},bt,At,function(e){return{...St(e),Argument(t){const n=e.getArgument(),i=e.getFieldDef(),r=e.getParentType();if(!n&&i&&r){const n=t.name.value,s=Q(n,i.args.map((e=>e.name)));e.reportError(new o(`Unknown argument "${n}" on field "${r.name}.${i.name}".`+B(s),t))}}}},wt,function(e){return{ListValue(t){if(!de(function(e){if(e)return fe(e)?e.ofType:e}(e.getParentInputType())))return Rt(e,t),!1},ObjectValue(t){const n=Oe(e.getInputType());if(!pe(n))return Rt(e,t),!1;const i=M(t.fields,(e=>e.name.value));for(const s of Object.values(n.getFields())){if(!i[s.name]&&(fe((r=s).type)&&void 0===r.defaultValue)){const i=f(s.type);e.reportError(new o(`Field "${n.name}.${s.name}" of required type "${i}" was not provided.`,t))}}var r},ObjectField(t){const n=Oe(e.getParentInputType());if(!e.getInputType()&&pe(n)){const i=Q(t.name.value,Object.keys(n.getFields()));e.reportError(new o(`Field "${t.name.value}" is not defined by type "${n.name}".`+B(i),t))}},NullValue(t){const n=e.getInputType();fe(n)&&e.reportError(new o(`Expected value of type "${f(n)}", found ${z(t)}.`,t))},EnumValue:t=>Rt(e,t),IntValue:t=>Rt(e,t),FloatValue:t=>Rt(e,t),StringValue:t=>Rt(e,t),BooleanValue:t=>Rt(e,t)}},function(e){return{...Lt(e),Field:{leave(t){var n;const i=e.getFieldDef();if(!i)return!1;const r=new Set(null===(n=t.arguments)||void 0===n?void 0:n.map((e=>e.name.value)));for(const n of i.args)if(!r.has(n.name)&&ke(n)){const r=f(n.type);e.reportError(new o(`Field "${i.name}" argument "${n.name}" of type "${r}" is required, but it was not provided.`,t))}}}}},function(e){let t=Object.create(null);return{OperationDefinition:{enter(){t=Object.create(null)},leave(n){const i=e.getRecursiveVariableUsages(n);for(const{node:n,type:r,defaultValue:s}of i){const i=n.name.value,a=t[i];if(a&&r){const t=e.getSchema(),c=vt(t,a.type);if(c&&!Ft(t,c,a.defaultValue,r,s)){const t=f(c),s=f(r);e.reportError(new o(`Variable "$${i}" of type "${t}" used in position expecting type "${s}".`,[a,n]))}}}}},VariableDefinition(e){t[e.variable.name.value]=e}}},function(e){const t=new Gt,n=new Map;return{SelectionSet(i){const r=function(e,t,n,i,r){const s=[],[o,a]=Pt(e,t,i,r);if(function(e,t,n,i,r){for(const[s,o]of Object.entries(r))if(o.length>1)for(let r=0;r<o.length;r++)for(let a=r+1;a<o.length;a++){const c=Mt(e,n,i,!1,s,o[r],o[a]);c&&t.push(c)}}(e,s,t,n,o),0!==a.length)for(let i=0;i<a.length;i++){Ct(e,s,t,n,!1,o,a[i]);for(let r=i+1;r<a.length;r++)Ut(e,s,t,n,!1,a[i],a[r])}return s}(e,n,t,e.getParentType(),i);for(const[[t,n],i,s]of r){const r=kt(n);e.reportError(new o(`Fields "${t}" conflict because ${r}. Use different aliases on the fields to fetch both if this was intentional.`,i.concat(s)))}}}},Yt]),Object.freeze([function(e){var t,n,i;const r=e.getSchema(),s=null!==(t=null!==(n=null!==(i=null==r?void 0:r.astNode)&&void 0!==i?i:null==r?void 0:r.getQueryType())&&void 0!==n?n:null==r?void 0:r.getMutationType())&&void 0!==t?t:null==r?void 0:r.getSubscriptionType();let a=0;return{SchemaDefinition(t){s?e.reportError(new o("Cannot define a new schema within a schema extension.",t)):(a>0&&e.reportError(new o("Must provide only one schema definition.",t)),++a)}}},function(e){const t=e.getSchema(),n=Object.create(null),i=t?{query:t.getQueryType(),mutation:t.getMutationType(),subscription:t.getSubscriptionType()}:{};return{SchemaDefinition:r,SchemaExtension:r};function r(t){var r;const s=null!==(r=t.operationTypes)&&void 0!==r?r:[];for(const t of s){const r=t.operation,s=n[r];i[r]?e.reportError(new o(`Type for ${r} already defined in the schema. It cannot be redefined.`,t)):s?e.reportError(new o(`There can be only one ${r} type in schema.`,[s,t])):n[r]=t}return!1}},function(e){const t=Object.create(null),n=e.getSchema();return{ScalarTypeDefinition:i,ObjectTypeDefinition:i,InterfaceTypeDefinition:i,UnionTypeDefinition:i,EnumTypeDefinition:i,InputObjectTypeDefinition:i};function i(i){const r=i.name.value;if(null==n||!n.getType(r))return t[r]?e.reportError(new o(`There can be only one type named "${r}".`,[t[r],i.name])):t[r]=i.name,!1;e.reportError(new o(`Type "${r}" already exists in the schema. It cannot also be defined in this type definition.`,i.name))}},function(e){const t=e.getSchema(),n=t?t.getTypeMap():Object.create(null),i=Object.create(null);return{EnumTypeDefinition:r,EnumTypeExtension:r};function r(t){var r;const s=t.name.value;i[s]||(i[s]=Object.create(null));const a=null!==(r=t.values)&&void 0!==r?r:[],c=i[s];for(const t of a){const i=t.name.value,r=n[s];ue(r)&&r.getValue(i)?e.reportError(new o(`Enum value "${s}.${i}" already exists in the schema. It cannot also be defined in this type extension.`,t.name)):c[i]?e.reportError(new o(`Enum value "${s}.${i}" can only be defined once.`,[c[i],t.name])):c[i]=t.name}return!1}},function(e){const t=e.getSchema(),n=t?t.getTypeMap():Object.create(null),i=Object.create(null);return{InputObjectTypeDefinition:r,InputObjectTypeExtension:r,InterfaceTypeDefinition:r,InterfaceTypeExtension:r,ObjectTypeDefinition:r,ObjectTypeExtension:r};function r(t){var r;const s=t.name.value;i[s]||(i[s]=Object.create(null));const a=null!==(r=t.fields)&&void 0!==r?r:[],c=i[s];for(const t of a){const i=t.name.value;Jt(n[s],i)?e.reportError(new o(`Field "${s}.${i}" already exists in the schema. It cannot also be defined in this type extension.`,t.name)):c[i]?e.reportError(new o(`Field "${s}.${i}" can only be defined once.`,[c[i],t.name])):c[i]=t.name}return!1}},function(e){const t=Object.create(null),n=e.getSchema();return{DirectiveDefinition(i){const r=i.name.value;if(null==n||!n.getDirective(r))return t[r]?e.reportError(new o(`There can be only one directive named "@${r}".`,[t[r],i.name])):t[r]=i.name,!1;e.reportError(new o(`Directive "@${r}" already exists in the schema. It cannot be redefined.`,i.name))}}},gt,bt,At,function(e){const t=e.getSchema(),n=Object.create(null);for(const t of e.getDocument().definitions)_t(t)&&(n[t.name.value]=t);return{ScalarTypeExtension:i,ObjectTypeExtension:i,InterfaceTypeExtension:i,UnionTypeExtension:i,EnumTypeExtension:i,InputObjectTypeExtension:i};function i(i){const r=i.name.value,s=n[r],a=null==t?void 0:t.getType(r);let l;if(s?l=Kt[s.kind]:a&&(l=function(e){if(oe(e))return c.SCALAR_TYPE_EXTENSION;if(ae(e))return c.OBJECT_TYPE_EXTENSION;if(ce(e))return c.INTERFACE_TYPE_EXTENSION;if(le(e))return c.UNION_TYPE_EXTENSION;if(ue(e))return c.ENUM_TYPE_EXTENSION;if(pe(e))return c.INPUT_OBJECT_TYPE_EXTENSION;ie(!1,"Unexpected type: "+f(e))}(a)),l){if(l!==i.kind){const t=function(e){switch(e){case c.SCALAR_TYPE_EXTENSION:return"scalar";case c.OBJECT_TYPE_EXTENSION:return"object";case c.INTERFACE_TYPE_EXTENSION:return"interface";case c.UNION_TYPE_EXTENSION:return"union";case c.ENUM_TYPE_EXTENSION:return"enum";case c.INPUT_OBJECT_TYPE_EXTENSION:return"input object"}ie(!1,"Unexpected kind: "+f(e))}(i.kind);e.reportError(new o(`Cannot extend non-${t} type "${r}".`,s?[s,i]:i))}}else{const s=Q(r,Object.keys({...n,...null==t?void 0:t.getTypeMap()}));e.reportError(new o(`Cannot extend type "${r}" because it is not defined.`+B(s),i.name))}}},St,wt,Yt,Lt]),M(We.concat(ut),(e=>e.name)),Object.freeze({TYPE_REMOVED:"TYPE_REMOVED",TYPE_CHANGED_KIND:"TYPE_CHANGED_KIND",TYPE_REMOVED_FROM_UNION:"TYPE_REMOVED_FROM_UNION",VALUE_REMOVED_FROM_ENUM:"VALUE_REMOVED_FROM_ENUM",REQUIRED_INPUT_FIELD_ADDED:"REQUIRED_INPUT_FIELD_ADDED",IMPLEMENTED_INTERFACE_REMOVED:"IMPLEMENTED_INTERFACE_REMOVED",FIELD_REMOVED:"FIELD_REMOVED",FIELD_CHANGED_KIND:"FIELD_CHANGED_KIND",REQUIRED_ARG_ADDED:"REQUIRED_ARG_ADDED",ARG_REMOVED:"ARG_REMOVED",ARG_CHANGED_KIND:"ARG_CHANGED_KIND",DIRECTIVE_REMOVED:"DIRECTIVE_REMOVED",DIRECTIVE_ARG_REMOVED:"DIRECTIVE_ARG_REMOVED",REQUIRED_DIRECTIVE_ARG_ADDED:"REQUIRED_DIRECTIVE_ARG_ADDED",DIRECTIVE_REPEATABLE_REMOVED:"DIRECTIVE_REPEATABLE_REMOVED",DIRECTIVE_LOCATION_REMOVED:"DIRECTIVE_LOCATION_REMOVED"}),Object.freeze({VALUE_ADDED_TO_ENUM:"VALUE_ADDED_TO_ENUM",TYPE_ADDED_TO_UNION:"TYPE_ADDED_TO_UNION",OPTIONAL_INPUT_FIELD_ADDED:"OPTIONAL_INPUT_FIELD_ADDED",OPTIONAL_ARG_ADDED:"OPTIONAL_ARG_ADDED",IMPLEMENTED_INTERFACE_ADDED:"IMPLEMENTED_INTERFACE_ADDED",ARG_DEFAULT_VALUE_CHANGE:"ARG_DEFAULT_VALUE_CHANGE"}),e.buildClientSchema=function(e,n){t(e)&&t(e.__schema)||E(!1,`Invalid or incomplete introspection result. Ensure that you are passing "data" property of introspection response and no "errors" was returned alongside: ${f(e)}.`);const i=e.__schema,r=j(i.types,(e=>e.name),(e=>function(e){if(null!=e&&null!=e.name&&null!=e.kind)switch(e.kind){case ct.SCALAR:return new be({name:(i=e).name,description:i.description,specifiedByURL:i.specifiedByURL});case ct.OBJECT:return new Ae({name:(n=e).name,description:n.description,interfaces:()=>m(n),fields:()=>T(n)});case ct.INTERFACE:return new Ce({name:(t=e).name,description:t.description,interfaces:()=>m(t),fields:()=>T(t)});case ct.UNION:return function(e){if(!e.possibleTypes){const t=f(e);throw new Error(`Introspection result missing possibleTypes: ${t}.`)}return new Ue({name:e.name,description:e.description,types:()=>e.possibleTypes.map(p)})}(e);case ct.ENUM:return function(e){if(!e.enumValues){const t=f(e);throw new Error(`Introspection result missing enumValues: ${t}.`)}return new Me({name:e.name,description:e.description,values:j(e.enumValues,(e=>e.name),(e=>({description:e.description,deprecationReason:e.deprecationReason})))})}(e);case ct.INPUT_OBJECT:return function(e){if(!e.inputFields){const t=f(e);throw new Error(`Introspection result missing inputFields: ${t}.`)}return new Pe({name:e.name,description:e.description,fields:()=>N(e.inputFields)})}(e)}var t;var n;var i;const r=f(e);throw new Error(`Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${r}.`)}(e)));for(const e of[...We,...ut])r[e.name]&&(r[e.name]=e);const s=i.queryType?p(i.queryType):null,o=i.mutationType?p(i.mutationType):null,a=i.subscriptionType?p(i.subscriptionType):null,c=i.directives?i.directives.map((function(e){if(!e.args){const t=f(e);throw new Error(`Introspection result missing directive args: ${t}.`)}if(!e.locations){const t=f(e);throw new Error(`Introspection result missing directive locations: ${t}.`)}return new dt({name:e.name,description:e.description,isRepeatable:e.isRepeatable,locations:e.locations.slice(),args:N(e.args)})})):[];return new yt({description:i.description,query:s,mutation:o,subscription:a,types:Object.values(r),directives:c,assumeValid:null==n?void 0:n.assumeValid});function l(e){if(e.kind===ct.LIST){const t=e.ofType;if(!t)throw new Error("Decorated type deeper than introspection query.");return new Ne(l(t))}if(e.kind===ct.NON_NULL){const t=e.ofType;if(!t)throw new Error("Decorated type deeper than introspection query.");const n=l(t);return new ve(function(e){if(!_e(e))throw new Error(`Expected ${f(e)} to be a GraphQL nullable type.`);return e}(n))}return u(e)}function u(e){const t=e.name;if(!t)throw new Error(`Unknown type reference: ${f(e)}.`);const n=r[t];if(!n)throw new Error(`Invalid or incomplete schema, unknown type: ${t}. Ensure that a full introspection query is used in order to build a client schema.`);return n}function p(e){return function(e){if(!ae(e))throw new Error(`Expected ${f(e)} to be a GraphQL Object type.`);return e}(u(e))}function h(e){return function(e){if(!ce(e))throw new Error(`Expected ${f(e)} to be a GraphQL Interface type.`);return e}(u(e))}function m(e){if(null===e.interfaces&&e.kind===ct.INTERFACE)return[];if(!e.interfaces){const t=f(e);throw new Error(`Introspection result missing interfaces: ${t}.`)}return e.interfaces.map(h)}function T(e){if(!e.fields)throw new Error(`Introspection result missing fields: ${f(e)}.`);return j(e.fields,(e=>e.name),y)}function y(e){const t=l(e.type);if(!Ee(t)){const e=f(t);throw new Error(`Introspection must provide output type for fields, but received: ${e}.`)}if(!e.args){const t=f(e);throw new Error(`Introspection result missing field args: ${t}.`)}return{description:e.description,deprecationReason:e.deprecationReason,type:t,args:N(e.args)}}function N(e){return j(e,(e=>e.name),v)}function v(e){const t=l(e.type);if(!he(t)){const e=f(t);throw new Error(`Introspection must provide input type for arguments, but received: ${e}.`)}const n=null!=e.defaultValue?Qt(function(e,t){const n=new x(e,t);n.expectToken(d.SOF);const i=n.parseValueLiteral(!1);return n.expectToken(d.EOF),i}(e.defaultValue),t):void 0;return{description:e.description,type:t,defaultValue:n,deprecationReason:e.deprecationReason}}},e.getIntrospectionQuery=function(e){const t={descriptions:!0,specifiedByUrl:!1,directiveIsRepeatable:!1,schemaDescription:!1,inputValueDeprecation:!1,...e},n=t.descriptions?"description":"",i=t.specifiedByUrl?"specifiedByURL":"",r=t.directiveIsRepeatable?"isRepeatable":"";function s(e){return t.inputValueDeprecation?e:""}return`\n    query IntrospectionQuery {\n      __schema {\n        ${t.schemaDescription?n:""}\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          ${n}\n          ${r}\n          locations\n          args${s("(includeDeprecated: true)")} {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      ${n}\n      ${i}\n      fields(includeDeprecated: true) {\n        name\n        ${n}\n        args${s("(includeDeprecated: true)")} {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields${s("(includeDeprecated: true)")} {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        ${n}\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      ${n}\n      type { ...TypeRef }\n      defaultValue\n      ${s("isDeprecated")}\n      ${s("deprecationReason")}\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `},e.parse=function(e,t){return new x(e,t).parseDocument()},Object.defineProperty(e,"__esModule",{value:!0}),e}({});
